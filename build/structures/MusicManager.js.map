{"version":3,"file":"MusicManager.js","sourceRoot":"","sources":["../../src/structures/MusicManager.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport Translator, { keys } from '#utils/Translator.js'\nimport formatTime from '#utils/formatTime.js'\nimport logger from '#utils/logger.js'\nimport {\n    APIEmbed,\n    APIMessageComponentEmoji,\n    ActionRowBuilder,\n    ButtonBuilder,\n    ButtonInteraction,\n    ButtonStyle,\n    ChatInputCommandInteraction,\n    Collection,\n    Colors,\n    ComponentType,\n    Guild,\n    GuildMember,\n    Message,\n    User,\n    VoiceChannel,\n} from 'discord.js'\nimport EventEmitter from 'events'\nimport yasha from 'yasha'\nimport { Innertube } from 'youtubei.js'\nimport client from '../bot.js'\nimport Player from './Player.js'\nimport { SpamIntervalDB } from './spamInterval.js'\nimport EmbedBuilder from '#structures/EmbedBuilder.js'\nconst spamIntervald = new SpamIntervalDB()\ntype UserExtended = GuildMember & {}\ntype YoutubeInjecter<T> = T & { youtubei?: Innertube }\ntype RequesterInjecter<T> = T & { requester: User }\n\nexport default class MusicManager extends EventEmitter {\n    players = new Collection<string, Player>()\n    spamInterval = spamIntervald\n    youtubei = Innertube.create()\n    youtubeCodes = new Collection<string, UserExtended>()\n\n    private async sendSpamMSG (user: UserExtended, player: Player) {\n        await player.youtubei.session.signIn(undefined)\n        // if (!this.spamInterval.checkUser(user.id)) {\n\n        //     this.spamInterval.addUser(user.id, 30 * 60 * 1000);\n        // } else return\n    }\n\n    async createNewPlayer (vc: VoiceChannel, textChannelId: string, volume?: number) {\n        const player = new Player({\n            musicManager: this,\n            voiceChannel: vc,\n            textChannelId,\n            volume,\n            innertube: await Innertube.create(),\n        })\n        this.players.set(vc.guild.id, player)\n        player.on('ready', async () => await this.trackStart(player))\n        player.on('finish', () => this.trackEnd(player, true))\n        // TODO: FIX\n        // player.on(yasha.VoiceConnection.Status.Destroyed, async () => await player.destroy())\n        player.on('error', err => {\n            client.errorHandler.captureException(err)\n            logger.error(err)\n            player.skip()\n            player.play()\n        })\n\n        return player\n    }\n\n    async trackPause (player: Player, interaction: ChatInputCommandInteraction<'cached'> | ButtonInteraction): Promise<false | Message<boolean>> {\n        // Return false in case the player is not playing || paused || there is no message\n        const translate = Translator(interaction)\n        if (!player.queue.current) return false\n        player.playing ? player.pause() : player.pause(false)\n        type Writeable<T extends { [x: string]: any }, K extends string> = {\n            [P in K]: T[P];\n        }\n        const prevDesc = player.message?.embeds[0].description?.split('\\n')[0]\n        const newDesc = `${prevDesc}\\n\\n${translate(keys.stop[player.paused ? 'paused' : 'resumed'], { user: interaction.user.toString() })}`\n        const updatedEmbed: APIEmbed = {\n            ...player.message?.embeds[0], // Spread the existing embed properties\n            description: newDesc,\n        }\n        const updatedEmbed2 = new EmbedBuilder(updatedEmbed)\n            .setImage(player.message?.embeds[0].data.image?.url ?? null)\n            .setColor(player.message?.embeds[0].data.color ?? null)\n        if (player.message?.components) {\n            const actionRowComponents = player.message.components[0]?.components\n            if (actionRowComponents) {\n                const pauseButton = actionRowComponents.find((c) => c.customId === 'pauseMusic' && c.type === ComponentType.Button)\n                if (pauseButton && pauseButton.type === 2) // Make sure it's a button component\n                    if (player.playing)\n                         // @ts-expect-error\n                        (pauseButton.data.emoji as Writeable<APIMessageComponentEmoji, keyof APIMessageComponentEmoji>) = {\n                            name: client.settings.emojis.white.pause.name.toString(),\n                            id: client.settings.emojis.white.pause.id.toString(),\n                             // @ts-expect-error\n                            animated: pauseButton.data.emoji?.animated,\n                        }\n                    else\n                     // @ts-expect-error\n                        (pauseButton.data.emoji as Writeable<APIMessageComponentEmoji, keyof APIMessageComponentEmoji>) = {\n                            name: client.settings.emojis.white.play.name.toString(),\n                            id: client.settings.emojis.white.play.id.toString(),\n                             // @ts-expect-error\n                            animated: pauseButton.data.emoji?.animated,\n                        }\n            }\n        }\n        if (player.message) return await player.message.edit({ components: player.message.components, embeds: [updatedEmbed2] })\n        else return false\n    }\n\n    async trackStart (player: Player): Promise<void> {\n        // TODO: Check if the song limit is the saçme as stablished for the admins\n        // if(player.queue.current?.duration > player.guild.)\n\n        const equalizerSettings = [\n            { band: 32, gain: 0 }, // Baja frecuencia\n            { band: 64, gain: 1 }, // Frecuencia baja-mid\n            { band: 125, gain: 2 }, // Frecuencia mid\n            { band: 250, gain: 3 }, // Frecuencia mid-high\n            { band: 500, gain: 1 }, // Frecuencia mid-high\n            { band: 1000, gain: 0 }, // Frecuencia media central\n            { band: 2000, gain: -1 }, // Frecuencia mid-high\n            { band: 4000, gain: -2 }, // Frecuencia mid-high\n            { band: 8000, gain: -3 }, // Frecuencia high\n            { band: 16000, gain: -4 }, // Frecuencia muy alta\n        ]\n        player.setEqualizer(equalizerSettings)\n        player.playing = true\n        player.paused = false\n        const song = player.queue.current\n        if (!song) return\n        const translate = Translator(player.guild)\n        const row = new ActionRowBuilder<ButtonBuilder>().addComponents(\n            /* new ButtonBuilder().setStyle(ButtonStyle.Secondary).setCustomId('likeMusic').setEmoji('<:grey_heart:1133326993694392401>'), */ // TODO: Change to blue if user already liked music\n            new ButtonBuilder()\n                .setStyle(ButtonStyle.Secondary)\n                .setCustomId('shuffleMusic')\n                .setEmoji(`${client.settings.emojis.white.shuffle.full}`),\n            /* new ButtonBuilder().setStyle(ButtonStyle.Secondary).setCustomId('previousMusic').setEmoji('<:grey_previous:1133320744089178132>'), */\n            new ButtonBuilder()\n                .setStyle(ButtonStyle.Secondary)\n                .setCustomId('pauseMusic')\n                .setEmoji(`${client.settings.emojis.white.pause.full}`),\n            new ButtonBuilder()\n                .setStyle(ButtonStyle.Secondary)\n                .setCustomId('nextMusic')\n                .setEmoji(`${client.settings.emojis.white.next.full}`),\n            new ButtonBuilder()\n                .setStyle(ButtonStyle.Secondary)\n                .setCustomId('repeatMusic')\n                .setEmoji(`${client.settings.emojis.white.repeat_off.full}`),\n            new ButtonBuilder()\n                .setStyle(ButtonStyle.Secondary)\n                .setCustomId('queueMusic')\n                .setEmoji(`${client.settings.emojis.white.library.full}`),\n        )\n\n        const embed = new EmbedBuilder()\n            .setColor(client.settings.color)\n        if (song.platform === 'Youtube')\n            embed\n                .setImage(song.thumbnails?.[0].url ?? null)\n                .setDescription(\n                    `${translate(keys.PLAYING)} **[${song.title}](https://music.youtube.com/watch?v=${\n                        song.id\n                    })** [${formatDuration(song.duration ?? 0)}] • ${song.requester.toString()}`,\n                )\n        else if (song.platform === 'Spotify')\n            if (song.thumbnails?.[0]) {\n                embed.setDescription(\n                    `**${translate(keys.PLAYING)}\\n[${song.title}](https://open.spotify.com/track/${song.id})**`,\n                )\n                embed.setImage(song.thumbnails[0].url)\n            }\n\n        // ^ Si no tenemos un mensaje ya enviado, lo enviamos, y si lo tenemos, borramos el anterior y enviamos uno nuevo <3\n        player.message?.delete()\n        if (client.settings.debug === 'true')\n            logger.music(\n                'Playing | ' +\n                player.queue.current?.title +\n                    ' | ' +\n                    player.guild.name +\n                    ' | ' +\n                    player.queue.current?.requester.displayName,\n            )\n\n        try {\n            (player.message = await (await player.getTextChannel())?.send({\n                embeds: [embed],\n                components: [row],\n            }))\n        } catch (error) {\n            client.errorHandler.captureException(error as Error)\n            logger.error(error)\n        }\n    }\n\n    trackEnd (player: Player, finished: boolean) {\n        const track = player.queue.current\n        // logger.log(player.queue.length, player.queue.previous)\n        if (!track) return\n        if (!track?.duration) track.duration = player.getDuration()\n\n        if (player.trackRepeat) {\n            player.play()\n            return this\n        }\n\n        if (player.queueRepeat) {\n            player.queue.add(track)\n            player.queue.current = player.queue.shift() ?? null\n            player.play()\n            return this\n        }\n\n        if (player.queue.length) {\n            player.queue.current = player.queue.shift() ?? null\n            player.play()\n            return this\n        }\n\n        if (player.queue.current) {\n            player.stop()\n            player.playing = false\n            this.queueEnd(player)\n            return this\n        }\n        return this\n    }\n\n    async queueEnd (player: Player) {\n        const translate = Translator(player.guild)\n        if (player.queue.current) {\n            const embed = new EmbedBuilder()\n                .setColor(client.settings.color)\n                .setDescription(\n                    'Ha terminado ' +\n                    `**[${player.queue.current.title}](https://music.youtube.com/watch?v=${\n                        player.queue.current.id\n                    })** [${formatDuration(player.queue.current.duration ?? 0)}] • <@${\n                        player.queue.current?.requester.id\n                    }>`,\n                )\n                .setThumbnail(`https://img.youtube.com/vi/${player.queue.current.id}/maxresdefault.jpg`)\n            player.message?.edit({\n                components: [],\n                embeds: [embed],\n            })\n        }\n        try {\n            if (!player.stayInVc) return await this.destroy(player.guild)\n        } catch (error) {\n            client.errorHandler.captureException(error as Error)\n        }\n        const playlist = await player.youtubei.music.getUpNext(player.queue.current?.id ?? '', true)\n        this.ejecutarAccionesEnParalelo(playlist.contents, 5, player).then(() => {\n            player.skip()\n            player.play()\n        }).catch((err) => client.errorHandler.captureException(err))\n        const e = new EmbedBuilder()\n            .setTitle(translate(keys.automix.generated))\n            .setColor(Colors.Green)\n            .addFields(\n                {\n                    name: translate(keys.TITLE),\n                    value: 'a',\n                    inline: true,\n                },\n                {\n                    name: translate(keys.SONGS),\n                    value: '5',\n                    inline: true,\n                },\n                {\n                    name: translate(keys.REQUESTER),\n                    value: `${player.queue.current?.requester}`,\n                    inline: true,\n                },\n            )\n            .setThumbnail(`https://img.youtube.com/vi/${player.queue.current?.id}/maxresdefault.jpg`)\n        try {\n            await (await player.getTextChannel())?.send({\n                embeds: [e],\n                content: '',\n            })\n        } catch (error) {\n            client.errorHandler.captureException(error as Error)\n            this.destroy(player.guild)\n        }\n    }\n\n    async ejecutarAccionesEnParalelo (contents: any[], maxVeces: number, player: Player): Promise<void> {\n        const cantidadEjecuciones = Math.min(maxVeces, contents.length)\n        const promesas: Array<Promise<void>> = []\n\n        for (let i = 0; i < cantidadEjecuciones; i++) {\n            const indiceAleatorio = Math.floor(Math.random() * contents.length)\n            const elementoAleatorio = contents[indiceAleatorio]\n            promesas.push(this.ejecutarAccion(elementoAleatorio, player)) // Llamada a tu función de acción\n        }\n\n        await Promise.all(promesas)\n    }\n\n    async ejecutarAccion (elemento: any, player: Player) {\n        // Lógica de tu acción\n        const track = await client.music.search(elemento.video_id, client.user, 'Youtube')\n        if (!track) return\n        player.queue.add(track)\n    }\n\n    get (guild: Guild) {\n        return this.players.get(guild.id)\n    }\n\n    async destroy (guild: Guild) {\n        return await this.players.get(guild.id)?.destroy()\n    }\n\n    shuffleArray (array: any[]) {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1))\n            ;[array[i], array[j]] = [array[j], array[i]]\n        }\n        return array\n    }\n\n    async search (query: any, requester: YoutubeInjecter<User>, source: 'Spotify' | 'Youtube' | 'Soundcloud'): Promise<RequesterInjecter<any> | undefined> {\n        // let track\n        // if (requester.youtubei)\n        //     if (requester.youtubei.session.logged_in) {\n        //         const rawData = (await requester.youtubei.music.search(query)).contents?.[0]\n        //         track = rawData?.contents?.[0]?.id\n        //     } else {\n        //         (await requester.youtubei)\n        //         track = await (await yasha.Source.Youtube.search(query))[0]\n        //     }\n        // else track = await (await yasha.Source.Youtube.search(query))[0]\n\n        try {\n            let track = await yasha.Source.resolve(query)\n            if (!track) {\n                 // @ts-expect-error\n                const search = await yasha.Source.Youtube.search(query)\n                if (!search.length) {\n                    logger.debug(query, 'No se encontró nada')\n                    return undefined\n                }\n                const tracks = search.filter(t => t.platform === 'Youtube')\n                if (!tracks.length) return undefined\n                // @ts-expect-error\n                track = tracks[0]\n            }\n            if (track?.platform !== 'Youtube') return undefined\n            // if (track instanceof TrackPlaylist) {\n            //     track.forEach(t => {\n            //         t.requester = requester;\n            //         t.icon = null;\n            //         t.thumbnail;\n            //     });\n            // } else {\n            /* if (track.streams) {\n                    // console.log(track.streams)\n                    const stream = getMax(track.streams, 'bitrate')\n                    track.streams = [stream.object]\n                } */\n            // todo: fix\n            // track.requester = requester\n            return track\n            // }\n        } catch (error) {\n            if ([\n                'Video is age restricted',\n                'Playlist not found',\n                'This video is not available',\n            ].includes((error as Error).message))\n                throw new Error((error as Error).message)\n            client.errorHandler.captureException(error as Error)\n        }\n        return undefined\n    }\n\n    getPlayingPlayers () {\n        return this.players.filter(p => p.playing)\n    }\n}\n\nexport function formatDuration (duration: number) {\n    if (isNaN(duration) || typeof duration === 'undefined') return '00:00'\n    // if (duration > 3600000000) return language.LIVE\n    return formatTime(duration, true)\n}\n"]}