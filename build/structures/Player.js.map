{"version":3,"file":"Player.js","sourceRoot":"","sources":["../../src/structures/Player.ts"],"names":[],"mappings":"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","sourcesContent":["//  @ts-nocheck\nimport { Guild, LocaleString, Message, VoiceChannel, User, Snowflake, TextChannel, PermissionFlagsBits } from 'discord.js'\nimport MusicManager from './MusicManager.js'\nimport logger from '#utils/logger.js'\nimport { Innertube } from 'youtubei.js'\nimport Queue from './Queue.js'\nimport yasha from 'yasha'\nimport Translator, { keys } from '#utils/Translator.js'\n\nexport default class Player extends yasha.TrackPlayer {\n    trackRepeat = false\n    queueRepeat = false\n    stayInVoice = false\n    position = 0\n    playing = false\n    paused = false\n    volume = 100\n    queue = new Queue()\n    manager: MusicManager\n    #textChannelId?: Snowflake\n    voiceChannel: VoiceChannel\n    message?: Message\n    guild: Guild\n    leaveTimeout?: NodeJS.Timeout\n    bitrate?: number\n    connection?: any\n    subscription?: any\n    stayInVc = false\n    previouslyPaused = false\n    pausedUser?: User\n    resumedUser?: User\n    youtubei: Innertube\n    waitingMessage?: Message\n    constructor (options: {\n        musicManager: MusicManager\n        lang?: LocaleString\n        bitrate?: number\n        volume?: number\n        voiceChannel: VoiceChannel\n        textChannelId: Snowflake\n        guild?: Guild\n        innertube: Innertube\n    }) {\n        super({\n            external_packet_send: false,\n            external_encrypt: false,\n            normalize_volume: true,\n        })\n        this.youtubei = options.innertube\n        this.manager = options.musicManager\n        this.bitrate = options.bitrate\n        this.volume = options.volume ?? 100\n\n        this.voiceChannel = options.voiceChannel\n        this.guild = options.guild ?? options.voiceChannel.guild\n        this.guild.channels.fetch(options.textChannelId).then(channel => {\n            if (!channel?.isTextBased()) return\n            if (this.guild.members.me?.permissionsIn(channel).has([PermissionFlagsBits.EmbedLinks, PermissionFlagsBits.SendMessages]) === false) return\n            this.#textChannelId = options.textChannelId\n        }).catch(() => null)\n        this.on('finish', () => (this.playing = false))\n        this.on('error', (error: any) => (this.playing = false && logger.error(error)))\n    }\n\n    async connect () {\n        this.connection = await yasha.VoiceConnection.connect(this.voiceChannel, {\n            selfDeaf: true,\n        })\n        // TODO: Remove ts-ignore when yasha is updated\n        this.subscription = this.connection?.subscribe(this)\n        this.connection?.on('error', (error: any) => logger.error(error))\n    }\n\n    disconnect () {\n        this.connection?.disconnect()\n        if (this.connection) this.connection.destroy()\n    }\n\n    async play (track?: any) {\n        this.playing = true\n        // TODO: Check if this code works\n        if (!track && this.queue.current) super.play(this.queue.current)\n        else super.play(track)\n        clearTimeout(this.leaveTimeout)\n        this.leaveTimeout = undefined\n        try {\n            this.start()\n        } catch (error) {\n            if (`${error}`.includes('Video is age restricted'))\n                this.getTextChannel().then(c => {\n                    const translate = Translator(this.guild)\n                    c?.send({\n                        content: translate(keys.play.age_restricted),\n                    })\n                }).catch(e => undefined)\n        }\n    }\n\n    override async destroy () {\n        try {\n            if (this.connection) this.disconnect()\n            // TODO: FIX\n            //if (this.player) super.destroy()\n\n            return this.manager.players.delete(this.guild.id)\n        } catch (e) {\n            return logger.error(e)\n        }\n    }\n\n    skip () {\n        this.manager.trackEnd(this, false)\n    }\n\n    override setEqualizer (equalizer: any) {\n        super.setEqualizer(equalizer)\n    }\n\n    override setVolume (volume: number) {\n        if (volume > 100000) volume = 100000\n        super.setVolume(volume / 100)\n    }\n\n    setTrackRepeat (repeat = true) {\n        if (repeat) {\n            this.trackRepeat = true\n            this.queueRepeat = false\n        } else this.trackRepeat = false\n\n        return this\n    }\n\n    setQueueRepeat (repeat = true) {\n        if (repeat) {\n            this.trackRepeat = false\n            this.queueRepeat = true\n        } else this.queueRepeat = false\n\n        return this\n    }\n\n    pause (pause = true) {\n        if (this.paused === pause || !this.queue.totalSize) return this\n\n        this.playing = !pause\n        this.paused = pause\n        this.setPaused(pause)\n\n        return this\n    }\n\n    override seek (time: number) {\n        if (!this.queue.current) return\n\n        // set timer in the player too\n        super.seek(Number(time))\n    }\n\n    async getTextChannel () {\n        const channel = await this.guild.channels.fetch(this.#textChannelId ?? '')\n        if (!channel?.isTextBased()) return null\n        return channel as TextChannel\n    }\n\n    // eslint-disable-next-line accessor-pairs\n    set textChannelId (id: Snowflake) {\n        this.guild.channels.fetch(id).then(channel => {\n            if (!channel?.isTextBased()) return\n            if (this.guild.members.me?.permissionsIn(channel).has([PermissionFlagsBits.EmbedLinks, PermissionFlagsBits.SendMessages]) === false) return\n            this.#textChannelId = id\n        }).catch(() => null)\n    }\n\n    get textChannelId (): string | undefined {\n        return this.#textChannelId\n    }\n}\n"]}