{"version":3,"file":"antiCrash.js","sourceRoot":"","sources":["../../src/handlers/antiCrash.ts"],"names":[],"mappings":"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","sourcesContent":["import Client from '#structures/Client.js'\nimport * as Sentry from '@sentry/node'\nimport { ProfilingIntegration } from '@sentry/profiling-node'\nimport { WebhookClient } from 'discord.js'\nimport EmbedBuilder from '#structures/EmbedBuilder.js'\nimport logger from '#utils/logger.js'\n// TODO: se cmbiara a sentry\n\nclass ErrorManager {\n    client: Client\n    services = { sentry: { loggedIn: false } }\n    webhookClient: WebhookClient\n    constructor (client: Client) {\n        this.client = client\n\n        if (process.env.SENTRY_DSN && process.env.NODE_ENV === 'production') {\n            Sentry.init({\n                dsn: process.env.SENTRY_DSN,\n                integrations: [\n                    new Sentry.Integrations.Console(),\n                    new ProfilingIntegration(),\n                    ...Sentry.autoDiscoverNodePerformanceMonitoringIntegrations(),\n\n                ],\n                environment: process.env.NODE_ENV,\n                tracesSampleRate: 0.5,\n            })\n            this.services.sentry.loggedIn = true\n            logger.log('Connected to Sentry')\n        } else\n            logger.warn('Sentry DSN missing or not in production environment.')\n\n        this.webhookClient = new WebhookClient({\n            id: process.env.ERROR_WEBHOOK_ID ?? '',\n            token: process.env.ERROR_WEBHOOK_TOKEN ?? '',\n        })\n\n        process.on('unhandledRejection', this.handleUnhandledRejection.bind(this))\n        process.on('uncaughtException', this.handleUncaughtException.bind(this))\n        process.on('uncaughtExceptionMonitor', this.handleUncaughtExceptionMonitor.bind(this))\n    }\n\n    async handleUnhandledRejection (reason: any, p: any) {\n        await this.webhookClient.send({\n            embeds: [\n                new EmbedBuilder()\n                    .setColor(15548997)\n                    .setFields(\n                        { name: 'Razón', value: '```' + (await reason) + '```' },\n                        { name: 'Error', value: '```' + (await p) + '```' },\n                        { name: 'Bot', value: this.client.user?.displayName ?? 'Unknown' },\n                    ),\n            ],\n        })\n\n        if (this.services.sentry.loggedIn)\n            Sentry.captureException(p)\n\n        logger.warn(' [antiCrash] :: Unhandled Rejection/Catch')\n        logger.error(reason, p)\n    }\n\n    handleUncaughtException (err: string, origin: string) {\n        this.webhookClient.send({\n            embeds: [\n                new EmbedBuilder().setColor(15548997).setFields(\n                    { name: 'Origen', value: '```' + origin + '```' },\n                    {\n                        name: 'Error',\n                        value: '```' + err + '```',\n                    },\n                    { name: 'Bot', value: this.client.user?.displayName ?? 'Unknown' },\n                ),\n            ],\n        })\n\n        if (this.services.sentry.loggedIn)\n            Sentry.captureException(err)\n\n        logger.warn(' [antiCrash] :: Uncaught Exception/Catch')\n        logger.error(err, origin)\n    }\n\n    handleUncaughtExceptionMonitor (err: string, origin: string) {\n        this.webhookClient.send({\n            embeds: [\n                new EmbedBuilder().setColor(15548997).setFields(\n                    { name: 'Origen', value: '```' + origin + '```' },\n                    {\n                        name: 'Error',\n                        value: '```' + err + '```',\n                    },\n                    { name: 'Bot', value: this.client.user?.displayName ?? 'Unknown' },\n                ),\n            ],\n        })\n\n        if (this.services.sentry.loggedIn)\n            Sentry.captureException(err)\n\n        logger.warn(' [antiCrash] :: Uncaught Exception/Catch (MONITOR)')\n        logger.error(err, origin)\n    }\n\n    handleMultipleResolves (type: any, promise: any, reason: string) {\n        this.webhookClient.send({\n            embeds: [\n                new EmbedBuilder().setColor(15548997).setFields({\n                    name: 'Razón',\n                    value: '```' + reason + '```',\n                }),\n            ],\n        })\n\n        if (this.services.sentry.loggedIn)\n            Sentry.captureMessage('Multiple Resolves: ' + reason)\n\n        logger.warn(' [antiCrash] :: Multiple Resolves')\n        logger.error(reason)\n    }\n\n    captureException (error: Error) {\n        logger.error(error)\n        if (this.services.sentry.loggedIn)\n            Sentry.captureException(error)\n        const origin = error.stack?.split('\\n')[1]?.trim().split(' ')[1]\n        const reason = error.stack?.split('\\n')[0]?.trim()\n        this.webhookClient.send({\n            embeds: [\n                new EmbedBuilder()\n                    .setColor(15548997)\n                    .setFields(\n                        { name: 'Origen', value: '```' + origin + '```' },\n                        {\n                            name: 'Razón',\n                            value: '```' + reason + '```',\n                        },\n                        { name: 'Bot', value: this.client.user?.displayName ?? 'Unknown' })\n                    .setDescription('```\\n' + error.stack + '\\n```'),\n            ],\n        })\n    }\n}\n\nexport default ErrorManager\n"]}