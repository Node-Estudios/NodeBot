{"version":3,"file":"getUsedBot.js","sourceRoot":"","sources":["../../src/utils/getUsedBot.ts"],"names":[],"mappings":"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","sourcesContent":["import { CommandInteraction } from 'discord.js'\nexport default function getUsedBot(interaction: CommandInteraction<'cached'>) {\n    return new Promise((resolve, reject) => {\n        interaction.guild.members\n            .fetch(process.env.bot1id as string)\n            .then(member => {\n                if (member.voice.channel && member.voice.channel == interaction.member.voice.channel) {\n                    resolve(process.env.bot1id as string)\n                } else {\n                    interaction.guild.members\n                        .fetch(process.env.bot2id as string)\n                        .then(member => {\n                            if (member.voice.channel && member.voice.channel == interaction.member.voice.channel) {\n                                resolve(process.env.bot2id as string)\n                            } else {\n                                interaction.guild.members\n                                    .fetch(process.env.bot3id as string)\n                                    .then(member => {\n                                        if (\n                                            member.voice.channel &&\n                                            member.voice.channel == interaction.member.voice.channel\n                                        ) {\n                                            resolve(process.env.bot3id as string)\n                                        } else {\n                                            interaction.guild.members\n                                                .fetch(process.env.bot4id as string)\n                                                .then(member => {\n                                                    if (\n                                                        member.voice.channel &&\n                                                        member.voice.channel == interaction.member.voice.channel\n                                                    ) {\n                                                        resolve(process.env.bot4id as string)\n                                                    } else {\n                                                        resolve(0)\n                                                    }\n                                                })\n                                                .catch(() => resolve(0))\n                                        }\n                                    })\n                                    .catch(() => {\n                                        interaction.guild.members\n                                            .fetch(process.env.bot4id as string)\n                                            .then(member => {\n                                                if (\n                                                    member.voice.channel &&\n                                                    member.voice.channel == interaction.member.voice.channel\n                                                ) {\n                                                    resolve(process.env.bot4id as string)\n                                                } else {\n                                                    resolve(0)\n                                                }\n                                            })\n                                            .catch(() => resolve(0))\n                                    })\n                            }\n                        })\n                        .catch(() => {\n                            interaction.guild.members\n                                .fetch(process.env.bot3id as string)\n                                .then(member => {\n                                    if (\n                                        member.voice.channel &&\n                                        member.voice.channel == interaction.member.voice.channel\n                                    ) {\n                                        resolve(process.env.bot3id as string)\n                                    } else {\n                                        interaction.guild.members\n                                            .fetch(process.env.bot4id as string)\n                                            .then(member => {\n                                                if (\n                                                    member.voice.channel &&\n                                                    member.voice.channel == interaction.member.voice.channel\n                                                ) {\n                                                    resolve(process.env.bot4id as string)\n                                                } else {\n                                                    resolve(0)\n                                                }\n                                            })\n                                            .catch(() => resolve(0))\n                                    }\n                                })\n                                .catch(() => {\n                                    interaction.guild.members\n                                        .fetch(process.env.bot4id as string)\n                                        .then(member => {\n                                            if (\n                                                member.voice.channel &&\n                                                member.voice.channel == interaction.member.voice.channel\n                                            ) {\n                                                resolve(process.env.bot4id as string)\n                                            } else {\n                                                resolve(0)\n                                            }\n                                        })\n                                        .catch(() => resolve(0))\n                                })\n                        })\n                }\n            })\n            .catch(() => {\n                interaction.guild.members\n                    .fetch(process.env.bot2id as string)\n                    .then(member => {\n                        if (member.voice.channel && member.voice.channel == interaction.member.voice.channel) {\n                            resolve(process.env.bot2id as string)\n                        } else {\n                            interaction.guild.members\n                                .fetch(process.env.bot3id as string)\n                                .then(member => {\n                                    if (\n                                        member.voice.channel &&\n                                        member.voice.channel == interaction.member.voice.channel\n                                    ) {\n                                        resolve(process.env.bot3id as string)\n                                    } else {\n                                        interaction.guild.members\n                                            .fetch(process.env.bot4id as string)\n                                            .then(member => {\n                                                if (\n                                                    member.voice.channel &&\n                                                    member.voice.channel == interaction.member.voice.channel\n                                                ) {\n                                                    resolve(process.env.bot4id as string)\n                                                } else {\n                                                    resolve(0)\n                                                }\n                                            })\n                                            .catch(() => resolve(0))\n                                    }\n                                })\n                                .catch(() => {\n                                    interaction.guild.members\n                                        .fetch(process.env.bot4id as string)\n                                        .then(member => {\n                                            if (\n                                                member.voice.channel &&\n                                                member.voice.channel == interaction.member.voice.channel\n                                            ) {\n                                                resolve(process.env.bot4id as string)\n                                            } else {\n                                                resolve(0)\n                                            }\n                                        })\n                                        .catch(() => resolve(0))\n                                })\n                        }\n                    })\n                    .catch(() => {\n                        interaction.guild.members\n                            .fetch(process.env.bot3id as string)\n                            .then(member => {\n                                if (member.voice.channel && member.voice.channel == interaction.member.voice.channel) {\n                                    resolve(process.env.bot3id as string)\n                                } else {\n                                    interaction.guild.members\n                                        .fetch(process.env.bot4id as string)\n                                        .then(member => {\n                                            if (\n                                                member.voice.channel &&\n                                                member.voice.channel == interaction.member.voice.channel\n                                            ) {\n                                                resolve(process.env.bot4id as string)\n                                            } else {\n                                                resolve(0)\n                                            }\n                                        })\n                                        .catch(() => resolve(0))\n                                }\n                            })\n                            .catch(() => {\n                                interaction.guild.members\n                                    .fetch(process.env.bot4id as string)\n                                    .then(member => {\n                                        if (\n                                            member.voice.channel &&\n                                            member.voice.channel == interaction.member.voice.channel\n                                        ) {\n                                            resolve(process.env.bot4id as string)\n                                        } else {\n                                            resolve(0)\n                                        }\n                                    })\n                                    .catch(() => resolve(0))\n                            })\n                    })\n            })\n    })\n}\n"]}