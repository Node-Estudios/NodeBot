{"version":3,"file":"autocomplete.js","sourceRoot":"","sources":["../../src/cache/autocomplete.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,YAAY,CAAA;AAGvC,MAAM,iBAAiB;IACX,MAAM,CAAC,QAAQ,CAAmB;IACzB,KAAK,CAA2C;IAEjE;QACI,IAAI,CAAC,KAAK,GAAG,IAAI,UAAU,EAAwB,CAAA;IACvD,CAAC;IAEM,MAAM,CAAC,WAAW;QACrB,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE;YAC7B,iBAAiB,CAAC,QAAQ,GAAG,IAAI,iBAAiB,EAAE,CAAA;SACvD;QACD,OAAO,iBAAiB,CAAC,QAAQ,CAAA;IACrC,CAAC;IAEM,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,CAAA;IACrB,CAAC;CACJ;AAED,eAAe,iBAAiB,CAAC,WAAW,EAAE,CAAA","sourcesContent":["import { Collection } from 'discord.js'\nimport Autocomplete from '../structures/Autocomplete'\n\nclass AutocompleteCache {\n    private static instance: AutocompleteCache\n    private readonly cache: Collection<string | RegExp, Autocomplete>\n\n    private constructor () {\n        this.cache = new Collection<string, Autocomplete>()\n    }\n\n    public static getInstance (): AutocompleteCache {\n        if (!AutocompleteCache.instance) {\n            AutocompleteCache.instance = new AutocompleteCache()\n        }\n        return AutocompleteCache.instance\n    }\n\n    public getCache (): Collection<string | RegExp, Autocomplete> {\n        return this.cache\n    }\n}\n\nexport default AutocompleteCache.getInstance()\n"]}