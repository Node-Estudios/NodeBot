{"version":3,"file":"cooldowns.js","sourceRoot":"","sources":["../../src/cache/cooldowns.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAa,MAAM,YAAY,CAAA;AAClD,OAAO,QAAQ,MAAM,eAAe,CAAA;AAEpC,MAAM,aAAa;IACP,MAAM,CAAC,QAAQ,CAAe;IACtC,MAAM,GAAG,IAAI,UAAU,EAAkB,CAAA;IAEzC,MAAM,CAAC,WAAW;QACd,IAAI,CAAC,aAAa,CAAC,QAAQ;YACvB,aAAa,CAAC,QAAQ,GAAG,IAAI,aAAa,EAAE,CAAA;QAEhD,OAAO,aAAa,CAAC,QAAQ,CAAA;IACjC,CAAC;IAED,IAAI,KAAK;QACL,OAAO,IAAI,CAAC,MAAM,CAAA;IACtB,CAAC;IAED,SAAS,CAAE,MAAiB,EAAE,eAAuB;QACjD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,IAAI,eAAe,EAAE,CAAC;YAAE,OAAO,IAAI,CAAA;QACjE,MAAM,eAAe,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,eAAe,CAAC,EAAE,QAAQ,IAAI,CAAC,CAAA;QAC3F,IAAI,CAAC,eAAe;YAAE,OAAO,IAAI,CAAA;QACjC,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,IAAI,eAAe,EAAE,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE,CAAA;QAC9E,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,QAAQ,GAAG,CAAC,eAAe,GAAG,IAAI,CAAC;YAAE,OAAO,IAAI,CAAA;QACjE,OAAO,KAAK,CAAA;IAChB,CAAC;IAED,mBAAmB,CAAE,MAAiB,EAAE,eAAuB;QAC3D,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,IAAI,eAAe,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;IAC/D,CAAC;IAED,QAAQ,CAAE,MAAiB,EAAE,eAAuB;QAChD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,IAAI,eAAe,EAAE,CAAC;YAAE,OAAO,CAAC,CAAA;QAC9D,MAAM,eAAe,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,eAAe,CAAC,EAAE,QAAQ,IAAI,CAAC,CAAA;QAC3F,IAAI,CAAC,eAAe;YAAE,OAAO,CAAC,CAAA;QAC9B,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,IAAI,eAAe,EAAE,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE,CAAA;QAC9E,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,QAAQ,CAAC,CAAA;IAC7D,CAAC;CACJ;AAED,eAAe,aAAa,CAAC,WAAW,EAAE,CAAA","sourcesContent":["import { Collection, Snowflake } from 'discord.js'\nimport commands from './commands.js'\n\nclass CooldownCache {\n    private static instance: CooldownCache\n    #cache = new Collection<string, number>()\n\n    static getInstance (): CooldownCache {\n        if (!CooldownCache.instance)\n            CooldownCache.instance = new CooldownCache()\n\n        return CooldownCache.instance\n    }\n\n    get cache (): Collection<string, number> {\n        return this.#cache\n    }\n\n    canProced (userId: Snowflake, interactionName: string): boolean {\n        if (!this.#cache.has(`${userId}:${interactionName}`)) return true\n        const commandCooldown = commands.cache.find(c => c.name === interactionName)?.cooldown ?? 0\n        if (!commandCooldown) return true\n        const cooldown = this.#cache.get(`${userId}:${interactionName}`) ?? Date.now()\n        if (Date.now() - cooldown > (commandCooldown * 1000)) return true\n        return false\n    }\n\n    registerInteraction (userId: Snowflake, interactionName: string): void {\n        this.#cache.set(`${userId}:${interactionName}`, Date.now())\n    }\n\n    leftTime (userId: Snowflake, interactionName: string): number {\n        if (!this.#cache.has(`${userId}:${interactionName}`)) return 0\n        const commandCooldown = commands.cache.find(c => c.name === interactionName)?.cooldown ?? 0\n        if (!commandCooldown) return 0\n        const cooldown = this.#cache.get(`${userId}:${interactionName}`) ?? Date.now()\n        return (commandCooldown * 1000) - (Date.now() - cooldown)\n    }\n}\n\nexport default CooldownCache.getInstance()\n"]}