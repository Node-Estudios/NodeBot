{"version":3,"file":"commands.js","sourceRoot":"","sources":["../../src/cache/commands.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,UAAU,EAAE,MAAM,YAAY,CAAA;AAGvC,MAAM,YAAY;IACN,MAAM,CAAC,QAAQ,CAAc;IACrC,MAAM,CAA6B;IAEnC;QACI,IAAI,CAAC,MAAM,GAAG,IAAI,UAAU,EAAmB,CAAA;IACnD,CAAC;IAED,MAAM,CAAC,WAAW;QACd,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;YACzB,YAAY,CAAC,QAAQ,GAAG,IAAI,YAAY,EAAE,CAAA;QAC9C,CAAC;QACD,OAAO,YAAY,CAAC,QAAQ,CAAA;IAChC,CAAC;IAED,IAAI,KAAK;QACL,OAAO,IAAI,CAAC,MAAM,CAAA;IACtB,CAAC;CACJ;AAED,eAAe,YAAY,CAAC,WAAW,EAAE,CAAA","sourcesContent":["// commands.ts\nimport { Collection } from 'discord.js'\nimport Command from '#structures/Command.js'\n\nclass CommandCache {\n    private static instance: CommandCache\n    #cache: Collection<string, Command>\n\n    private constructor () {\n        this.#cache = new Collection<string, Command>()\n    }\n\n    static getInstance (): CommandCache {\n        if (!CommandCache.instance) {\n            CommandCache.instance = new CommandCache()\n        }\n        return CommandCache.instance\n    }\n\n    get cache (): Collection<string, Command> {\n        return this.#cache\n    }\n}\n\nexport default CommandCache.getInstance()\n"]}