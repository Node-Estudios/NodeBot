{"version":3,"file":"autocompletes.js","sourceRoot":"","sources":["../../src/cache/autocompletes.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAa,MAAM,YAAY,CAAA;AAGlD,MAAM,iBAAiB;IACX,MAAM,CAAC,QAAQ,CAAmB;IAC1C,MAAM,CAA2C;IACjD,aAAa,GAAG,IAAI,UAAU,EAG1B,CAAA;IAEJ;QACI,IAAI,CAAC,MAAM,GAAG,IAAI,UAAU,EAAwB,CAAA;IACxD,CAAC;IAED,MAAM,CAAC,WAAW;QACd,IAAI,CAAC,iBAAiB,CAAC,QAAQ;YAC3B,iBAAiB,CAAC,QAAQ,GAAG,IAAI,iBAAiB,EAAE,CAAA;QAExD,OAAO,iBAAiB,CAAC,QAAQ,CAAA;IACrC,CAAC;IAED,IAAI,KAAK;QACL,OAAO,IAAI,CAAC,MAAM,CAAA;IACtB,CAAC;IAED,SAAS,CAAE,MAAiB,EAAE,aAAwB;QAClD,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;QAC3C,IAAI,CAAC,IAAI;YAAE,OAAO,IAAI,CAAA;QACtB,IAAI,IAAI,CAAC,aAAa,KAAK,aAAa;YAAE,OAAO,IAAI,CAAA;QACrD,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI;YAAE,OAAO,IAAI,CAAA;QACnD,OAAO,KAAK,CAAA;IAChB,CAAC;IAED,mBAAmB,CAAE,MAAiB,EAAE,aAAwB;QAC5D,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAAA;IAC5E,CAAC;IAED,iBAAiB,CAAE,MAAiB;QAChC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;IACrC,CAAC;CACJ;AAED,eAAe,iBAAiB,CAAC,WAAW,EAAE,CAAA","sourcesContent":["import { Collection, Snowflake } from 'discord.js'\nimport Autocomplete from '#structures/Autocomplete.js'\n\nclass AutocompleteCache {\n    private static instance: AutocompleteCache\n    #cache: Collection<string | RegExp, Autocomplete>\n    #interactions = new Collection<Snowflake, {\n        interactionId: Snowflake\n        timestamp: number\n    }>()\n\n    private constructor () {\n        this.#cache = new Collection<string, Autocomplete>()\n    }\n\n    static getInstance (): AutocompleteCache {\n        if (!AutocompleteCache.instance)\n            AutocompleteCache.instance = new AutocompleteCache()\n\n        return AutocompleteCache.instance\n    }\n\n    get cache (): Collection<string | RegExp, Autocomplete> {\n        return this.#cache\n    }\n\n    canProced (userId: Snowflake, interactionId: Snowflake): boolean {\n        const auto = this.#interactions.get(userId)\n        if (!auto) return true\n        if (auto.interactionId !== interactionId) return true\n        if (Date.now() - auto.timestamp < 3000) return true\n        return false\n    }\n\n    registerInteraction (userId: Snowflake, interactionId: Snowflake): void {\n        this.#interactions.set(userId, { interactionId, timestamp: Date.now() })\n    }\n\n    removeInteraction (userId: Snowflake): void {\n        this.#interactions.delete(userId)\n    }\n}\n\nexport default AutocompleteCache.getInstance()\n"]}