{"version":3,"file":"buttons.js","sourceRoot":"","sources":["../../src/cache/buttons.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,YAAY,CAAA;AAGvC,MAAM,WAAW;IACL,MAAM,CAAC,QAAQ,CAAa;IACpC,MAAM,CAAqC;IAE3C;QACI,IAAI,CAAC,MAAM,GAAG,IAAI,UAAU,EAAkB,CAAA;IAClD,CAAC;IAED,MAAM,CAAC,WAAW;QACd,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;YACvB,WAAW,CAAC,QAAQ,GAAG,IAAI,WAAW,EAAE,CAAA;SAC3C;QACD,OAAO,WAAW,CAAC,QAAQ,CAAA;IAC/B,CAAC;IAED,IAAI,KAAK;QACL,OAAO,IAAI,CAAC,MAAM,CAAA;IACtB,CAAC;CACJ;AAED,eAAe,WAAW,CAAC,WAAW,EAAE,CAAA","sourcesContent":["import { Collection } from 'discord.js'\nimport Button from '#structures/Button.js'\n\nclass ButtonCache {\n    private static instance: ButtonCache\n    #cache: Collection<string | RegExp, Button>\n\n    private constructor () {\n        this.#cache = new Collection<string, Button>()\n    }\n\n    static getInstance (): ButtonCache {\n        if (!ButtonCache.instance) {\n            ButtonCache.instance = new ButtonCache()\n        }\n        return ButtonCache.instance\n    }\n\n    get cache (): Collection<string | RegExp, Button> {\n        return this.#cache\n    }\n}\n\nexport default ButtonCache.getInstance()\n"]}