{"version":3,"file":"queueMusic.js","sourceRoot":"","sources":["../../../../src/slash/buttons/play/queueMusic.ts"],"names":[],"mappings":"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","sourcesContent":["import Translator, { keys } from '#utils/Translator.js'\nimport { ButtonInteraction } from 'discord.js'\nimport EmbedBuilder from '#structures/EmbedBuilder.js'\nimport formatTime from '#utils/formatTime.js'\nimport Client from '#structures/Client.js'\nimport Button from '#structures/Button.js'\nimport logger from '#utils/logger.js'\n\nexport default class Queue extends Button {\n    constructor () {\n        super('queueMusic')\n    }\n\n    override async run (interaction: ButtonInteraction) {\n        try {\n            if (!interaction.inCachedGuild()) return await interaction.deferUpdate()\n            const translate = Translator(interaction)\n            const client = interaction.client as Client\n            const player = client.music.players.get(interaction.guild.id)\n            if (!player?.queue.current)\n                return await interaction.reply({\n                    embeds: [\n                        new EmbedBuilder().setColor(client.settings.color).setFooter({\n                            text: translate(keys.queue.no_queue),\n                            iconURL: interaction.user.displayAvatarURL(),\n                        }),\n                    ],\n                })\n\n            if (interaction.member.voice.channelId !== (player.voiceChannel.id ?? ''))\n                return await interaction.reply({\n                    embeds: [\n                        new EmbedBuilder().setColor(client.settings.color).setFooter({\n                            text: translate(keys.skip.no_same),\n                            iconURL: interaction.user.displayAvatarURL(),\n                        }),\n                    ],\n                })\n\n            const { title } = player.queue.current\n            const { queue } = player\n\n            player.queue.retrieve(1)\n\n            if (!player.queue[0] && player.queue.current)\n                return await interaction.reply({\n                    embeds: [\n                        new EmbedBuilder()\n                            .setTitle(translate(keys.queue.no_queue))\n                            .setDescription(\n                                `ðŸŽ§ ${translate(keys.queue.current)}\\n[${title}](https://www.music.youtube.com/watch?v=${\n                                    player.queue.current.id\n                                }) [<@${player.queue.current.requester.id}> - ${formatTime(\n                                    Math.trunc(player.queue.current.duration ?? 0),\n                                    false,\n                                )} - ${player.queue.current.streams?.[0].bitrate.toString().slice(0, 3)}Kbps]`,\n                            )\n                            .setAuthor({\n                                name: `${translate(keys.queue.queue, {\n                                    name: interaction.user.username ?? 'Unknown',\n                                })}`,\n                                iconURL: 'https://i.imgur.com/CCqeomm.gif',\n                            })\n                            .setColor(client.settings.color),\n                    ],\n                })\n\n            const x = 10\n            let i = -1\n            let j = 0\n\n            const queuelist = player.queue\n                .slice(x - 10, x)\n                .map(\n                    () =>\n                        `**${++j}.** [${queue[++i].title}](https://www.music.youtube.com/watch?v=${queue[i].id}) [<@${\n                            queue[i].requester.id\n                        }> - ${formatTime(Math.trunc(queue[i].duration ?? 0), false)} - ${queue[i].streams?.[0].bitrate\n                            .toString()\n                            .slice(0, 3)}Kbps]`,\n                )\n                .join('\\n')\n\n            if (!queuelist)\n                return await interaction.reply({\n                    embeds: [\n                        new EmbedBuilder().setColor(client.settings.color).setFooter({\n                            text: translate(keys.queue.no_page),\n                            iconURL: interaction.user.displayAvatarURL(),\n                        }),\n                    ],\n                })\n\n            return await interaction.reply({\n                embeds: [\n                    new EmbedBuilder()\n                        .setDescription(\n                            `ðŸŽ§ ${translate(keys.queue.current)}\\n [${title}](https://www.music.youtube.com/watch?v=${\n                                player.queue.current.id\n                            }) [<@${player.queue.current.requester.id}> - ${formatTime(\n                                Math.trunc(player.queue.current.duration ?? 0),\n                                false,\n                            )} - ${player.queue.current.streams?.[0].bitrate.toString().slice(0, 3)}Kbps]\\n__${\n                                translate(keys.NEXT)\n                            }__:\\n${queuelist}`,\n                        )\n                        .setThumbnail(client.user.displayAvatarURL())\n                        .setAuthor({\n                            name: `${translate(keys.queue.queue, {\n                                name: interaction.user.username ?? 'Unknown',\n                            })} (${Math.floor(x / 10)} / ${Math.floor((player.queue.slice(1).length + 10) / 10)})`,\n                            iconURL: 'https://i.imgur.com/CCqeomm.gif',\n                        })\n                        .setFooter({\n                            text: `${translate(keys.queue.total)} ${player.queue.length}`,\n                            iconURL: interaction.user.displayAvatarURL(),\n                        })\n                        .setColor(client.settings.color),\n                ],\n            })\n        } catch (e) {\n            return logger.error(e)\n        }\n    }\n}\n"]}