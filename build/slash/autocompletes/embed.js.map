{"version":3,"file":"embed.js","sourceRoot":"","sources":["../../../src/slash/autocompletes/embed.ts"],"names":[],"mappings":"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","sourcesContent":["import Autocomplete from '#structures/Autocomplete.js'\nimport Color from '#structures/Color.js'\nimport Translator, { keys } from '#utils/Translator.js'\nimport logger from '#utils/logger.js'\nimport { AutocompleteInteraction, Colors } from 'discord.js'\n\nexport default class Embed extends Autocomplete {\n    constructor () {\n        super('embed')\n    }\n\n    override async run (interaction: AutocompleteInteraction) {\n        const translate = Translator(interaction)\n        const invalidInput = translate(keys.embed.invalid_input)\n        const focused = interaction.options.getFocused()?.trim()\n        const suggestions: Array<{ name: string, value: string }> = []\n        const values = Object.values(Colors)\n        if (!focused) {\n            if (!this.canProced(interaction.user.id, interaction.id)) return false\n            await interaction.respond([\n                { name: 'Default', value: `${Colors.Default}` },\n                { name: '#000', value: `${Colors.Default}` },\n                { name: '0x000000', value: `${Colors.Default}` },\n                { name: 'rgb(0, 0, 0)', value: `${Colors.Default}` },\n                { name: 'White', value: `${Colors.White}` },\n                { name: '#ffffff', value: `${Colors.White}` },\n                { name: '0xffffff', value: `${Colors.White}` },\n                { name: 'rgb(255, 255, 255)', value: `${Colors.White}` },\n                { name: 'Red', value: `${Colors.Red}` },\n                { name: '#FF0000', value: `${Colors.Red}` },\n                { name: '0xFF0000', value: `${Colors.Red}` },\n                { name: 'rgb 255, 0, 0', value: `${Colors.Red}` },\n                { name: 'Green', value: `${Colors.Green}` },\n                { name: '#00FF00', value: `${Colors.Green}` },\n                { name: '0x00FF00', value: `${Colors.Green}` },\n                { name: 'rgb(0 255 0)', value: `${Colors.Green}` },\n                { name: 'Blue', value: `${Colors.Blue}` },\n                { name: '#0000FF', value: `${Colors.Blue}` },\n                { name: '0x0000ff', value: `${Colors.Blue}` },\n                { name: 'rgb 0 0 255', value: `${Colors.Blue}` },\n            ]).catch(logger.error)\n            return true\n        } else if (focused.startsWith('#')) {\n            if (!Color.isHex(focused)) suggestions.push({ name: invalidInput, value: '#000000' })\n            for (let i = 0, random = Math.floor(Math.random() * values.length); i < 24; i++, random = Math.floor(Math.random() * values.length)) suggestions.push({ name: `#${values[random].toString(16)}`, value: `${values[random]}` })\n        } else if (focused.startsWith('0x')) {\n            if (!Color.isHex0x(focused)) suggestions.push({ name: invalidInput, value: '0x000000' })\n            for (let i = 0, random = Math.floor(Math.random() * values.length); i < 24; i++, random = Math.floor(Math.random() * values.length)) suggestions.push({ name: `0x${values[random].toString(16)}`, value: `${values[random]}` })\n        } else if (focused.startsWith('rgb')) {\n            if (!Color.isRGB(focused)) suggestions.push({ name: invalidInput, value: 'rgb(0, 0, 0)' })\n            for (let i = 0; i < 24; i++) {\n                const random = Math.floor(Math.random() * values.length)\n                const [r, g, b] = new Color(`${values[random]}`).rgb\n                suggestions.push({ name: `rgb(${r}, ${g}, ${b})`, value: `rgb(${r ?? 0}, ${g ?? 0}, ${b ?? 0})` })\n            }\n        } else {\n            const colors = Object.entries(Colors)\n            suggestions.push(...colors.filter(([name]) => name.toLowerCase().includes(focused.toLowerCase())).map(([name, value]) => ({ name, value: `${value}` })))\n            suggestions.push(...colors.filter(([key]) => suggestions.some(({ name }) => name !== key)).map(([name, value]) => ({ name, value: `${value}` })))\n        }\n        if (suggestions.length > 25) suggestions.length = 25\n        if (!this.canProced(interaction.user.id, interaction.id)) return false\n        await interaction.respond(suggestions).catch(logger.error)\n        return true\n    }\n}\n"]}