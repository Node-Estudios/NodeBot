{"version":3,"file":"play.js","sourceRoot":"","sources":["../../../../src/slash/autocompletes/play/play.ts"],"names":[],"mappings":"AACA,OAAO,YAAY,MAAM,6BAA6B,CAAA;AACtD,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,MAAM,MAAM,kBAAkB,CAAA;AAGrC,MAAM,CAAC,OAAO,OAAO,MAAO,SAAQ,YAAY;IAC5C;QACI,KAAK,CAAC,MAAM,CAAC,CAAA;IACjB,CAAC;IAEQ,KAAK,CAAC,GAAG,CAAE,WAAoC;QACpD,MAAM,MAAM,GAAG,WAAW,CAAC,MAAgB,CAAA;QAC3C,IAAI;YACA,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,EAAE,CAAA;YAC9C,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;YACvD,IAAI,MAAM,CAAC,MAAM,GAAG,EAAE;gBAAE,MAAM,CAAC,MAAM,GAAG,EAAE,CAAA;YAC1C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE,WAAW,CAAC,EAAE,CAAC;gBAAE,OAAO,KAAK,CAAA;YACtE,MAAM,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;gBACrC,MAAM,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE,CAAA;gBAC3B,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,EAAE,CAAA;gBACvB,OAAO;oBACH,IAAI,EAAE,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK;oBAC7D,KAAK,EAAE,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG;iBAC3D,CAAA;YACL,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;YACvB,OAAO,IAAI,CAAA;SACd;QAAC,OAAO,KAAK,EAAE;YACZ,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;YACnB,MAAM,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAc,CAAC,CAAA;YACpD,OAAO,IAAI,CAAA;SACd;IACL,CAAC;CACJ","sourcesContent":["import { AutocompleteInteraction } from 'discord.js'\nimport Autocomplete from '#structures/Autocomplete.js'\nimport yasha from 'yasha'\nimport logger from '#utils/logger.js'\nimport Client from '#structures/Client.js'\n\nexport default class Repeat extends Autocomplete {\n    constructor () {\n        super('play')\n    }\n\n    override async run (interaction: AutocompleteInteraction) {\n        const client = interaction.client as Client\n        try {\n            const query = interaction.options.getFocused()\n            const search = await yasha.Source.Youtube.search(query)\n            if (search.length > 25) search.length = 25\n            if (!this.canProced(interaction.user.id, interaction.id)) return false\n            await interaction.respond(search.map(r => {\n                const title = r.title ?? ''\n                const url = r.url ?? ''\n                return {\n                    name: title.length > 100 ? title.slice(0, 95) + '...' : title,\n                    value: url.length > 100 ? url.slice(0, 95) + '...' : url,\n                }\n            })).catch(logger.error)\n            return true\n        } catch (error) {\n            logger.error(error)\n            client.errorHandler.captureException(error as Error)\n            return true\n        }\n    }\n}\n"]}