{"version":3,"file":"mchistory.js","sourceRoot":"","sources":["../../../../src/slash/commands/InformaciÃ³n y Utilidad/mchistory.ts"],"names":[],"mappings":"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","sourcesContent":["import { ApplicationCommandOptionType, ChatInputCommandInteraction } from 'discord.js'\nimport EmbedBuilder from '#structures/EmbedBuilder.js'\nimport Client from '#structures/Client.js'\nimport Command from '#structures/Command.js'\nimport Translator, { keys } from '#utils/Translator.js'\n\nexport default class mchistory extends Command {\n    constructor () {\n        super({\n            name: 'mchistory',\n            description: 'Show the history of a Minecraft account.',\n            cooldown: 5,\n            options: [\n                {\n                    type: ApplicationCommandOptionType.String,\n                    name: 'account',\n                    description: 'The account to show the history of.',\n                    required: true,\n                },\n            ],\n        })\n    }\n\n    override async run (interaction: ChatInputCommandInteraction) {\n        const translate = Translator(interaction)\n        const client = interaction.client as Client\n        const res = await fetch(\n            `https://mc-heads.net/minecraft/profile/${interaction.options.getString('account', true)}`,\n        )\n            .then(async r => await r.json())\n            .catch(() => null)\n        if (!res)\n            return await interaction.reply({\n                embeds: [\n                    new EmbedBuilder()\n                        .setColor('Red')\n                        .setTitle(translate(keys.ERROREMBED) + ' <:error:897836005787308062>')\n                        .setDescription(translate(keys.mchistory.dont))\n                        .setFooter({\n                            text: interaction.user.username + '#' + interaction.user.discriminator,\n                            iconURL: interaction.user.displayAvatarURL(),\n                        }),\n                ],\n            })\n\n        return await interaction.reply({\n            embeds: [\n                new EmbedBuilder()\n                    .setTitle(translate(keys.mchistory.names))\n                    .setColor(client.settings.color)\n                    .setFields(\n                        res.name_history?.map((i: any) => ({\n                            name: i.changedToAt ? parserTimeStamp(i.changedToAt) : translate(keys.mchistory.first),\n                            value: i.name,\n                        })) ?? [\n                            {\n                                name: translate(keys.mchistory.first),\n                                value: res.name,\n                            },\n                        ],\n                    )\n                    .setTimestamp(),\n            ],\n        })\n    }\n}\nfunction addCeroDay (numero: number) {\n    if (numero < 10) return '0' + numero\n    else return numero + ''\n}\n\nfunction parserTimeStamp (date: Date): string {\n    date = new Date(date)\n    return (\n        addCeroDay(date.getDate()) +\n        '-' +\n        addCeroDay(date.getMonth() + 1) +\n        '-' +\n        addCeroDay(date.getFullYear()) +\n        '  ' +\n        addCeroDay(date.getHours()) +\n        ':' +\n        addCeroDay(date.getMinutes()) +\n        ':' +\n        addCeroDay(date.getSeconds())\n    )\n}\n"]}