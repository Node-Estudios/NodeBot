{"version":3,"file":"reboot.js","sourceRoot":"","sources":["../../../../src/slash/commands/dev/reboot.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,4BAA4B,EAA+B,MAAM,YAAY,CAAA;AAEtF,OAAO,OAAO,MAAM,wBAAwB,CAAA;AAC5C,OAAO,UAAU,EAAE,EAAE,IAAI,EAAE,MAAM,sBAAsB,CAAA;AACvD,OAAO,MAAM,MAAM,kBAAkB,CAAA;AAErC,MAAM,CAAC,OAAO,OAAO,MAAO,SAAQ,OAAO;IACvC;QACI,KAAK,CAAC;YACF,IAAI,EAAE,QAAQ;YACd,WAAW,EAAE,+BAA+B;YAC5C,WAAW,EAAE;gBACT,GAAG,EAAE,IAAI;aACZ;YACD,OAAO,EAAE;gBACL;oBACI,IAAI,EAAE,4BAA4B,CAAC,OAAO;oBAC1C,IAAI,EAAE,OAAO;oBACb,WAAW,EAAE,qBAAqB;oBAClC,QAAQ,EAAE,KAAK;iBAClB;aACJ;SACJ,CAAC,CAAA;IACN,CAAC;IAEQ,KAAK,CAAC,GAAG,CAAE,WAAwC;QAExD,MAAM,MAAM,GAAG,WAAW,CAAC,MAAgB,CAAA;QAC3C,IAAI,CAAC;YACD,MAAM,SAAS,GAAG,UAAU,CAAC,WAAW,CAAC,CAAA;YACzC,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA;YACpD,IAAI,CAAC,KAAK,EAAE,CAAC;gBACT,MAAM,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;gBACnD,OAAO,MAAM,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAA;YACtE,CAAC;YACD,MAAM,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,CAAA;YAChE,MAAM,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAA;QACxD,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;YACnB,MAAM,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAc,CAAC,CAAA;QACxD,CAAC;IACL,CAAC;CACJ","sourcesContent":["import { ApplicationCommandOptionType, ChatInputCommandInteraction } from 'discord.js'\nimport Client from '#structures/Client.js'\nimport Command from '#structures/Command.js'\nimport Translator, { keys } from '#utils/Translator.js'\nimport logger from '#utils/logger.js'\n\nexport default class reboot extends Command {\n    constructor () {\n        super({\n            name: 'reboot',\n            description: 'Reboot a shard or all shards.',\n            permissions: {\n                dev: true,\n            },\n            options: [\n                {\n                    type: ApplicationCommandOptionType.Integer,\n                    name: 'shard',\n                    description: 'The Shard to reboot',\n                    required: false,\n                },\n            ],\n        })\n    }\n\n    override async run (interaction: ChatInputCommandInteraction) {\n        // TODO: Change reboot system\n        const client = interaction.client as Client\n        try {\n            const translate = Translator(interaction)\n            const shard = interaction.options.getNumber('shard')\n            if (!shard) {\n                await interaction.reply(translate(keys.reboot.all))\n                return await client.cluster.send({ type: 'reboot', shard: 'all' })\n            }\n            await interaction.reply(translate(keys.reboot.shard, { shard }))\n            await client.cluster.send({ type: 'reboot', shard })\n        } catch (error) {\n            logger.error(error)\n            client.errorHandler.captureException(error as Error)\n        }\n    }\n}\n"]}