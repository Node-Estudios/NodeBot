{"version":3,"file":"eval.js","sourceRoot":"","sources":["../../../../src/slash/commands/dev/eval.ts"],"names":[],"mappings":"AACA,OAAO,OAAO,MAAM,wBAAwB,CAAA;AAC5C,OAAO,EAAE,4BAA4B,EAA+B,YAAY,EAAE,MAAM,YAAY,CAAA;AAEpG,MAAM,CAAC,OAAO,OAAO,IAAK,SAAQ,OAAO;IACrC;QACI,KAAK,CAAC;YACF,IAAI,EAAE,MAAM;YACZ,WAAW,EAAE,eAAe;YAC5B,WAAW,EAAE;gBACT,GAAG,EAAE,IAAI;aACZ;YACD,OAAO,EAAE;gBACL;oBACI,IAAI,EAAE,4BAA4B,CAAC,MAAM;oBACzC,IAAI,EAAE,MAAM;oBACZ,WAAW,EAAE,sBAAsB;oBACnC,QAAQ,EAAE,IAAI;iBACjB;aACJ;SACJ,CAAC,CAAA;IACN,CAAC;IAEQ,KAAK,CAAC,GAAG,CAAE,WAAwC;QACxD,MAAM,MAAM,GAAG,WAAW,CAAC,MAAgB,CAAA;QAC3C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC;YAAE,OAAO,MAAM,WAAW,CAAC,KAAK,CAAC,iCAAiC,CAAC,CAAA;QACjH,MAAM,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;QACxD,IAAI;YAEA,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,CAAA;YAC/B,OAAO,MAAM,WAAW,CAAC,KAAK,CAAC;gBAC3B,MAAM,EAAE;oBACJ,IAAI,YAAY,EAAE;yBACb,QAAQ,CAAC,MAAM,CAAC;yBAChB,SAAS,CAAC;wBACP,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,aAAa,IAAI,QAAQ;qBACnC,CAAC;yBACD,cAAc,CAAC,aAAa,MAAM,QAAQ,CAAC;iBACnD;gBACD,SAAS,EAAE,IAAI;aAClB,CAAC,CAAA;SACL;QAAC,OAAO,KAAK,EAAE;YACZ,OAAO,MAAM,WAAW,CAAC,KAAK,CAAC;gBAC3B,MAAM,EAAE,CAAC,IAAI,YAAY,EAAE;yBACtB,QAAQ,CAAC,MAAM,CAAC;yBAChB,SAAS,CAAC;wBACP,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,aAAa,IAAI,QAAQ;qBACnC,CAAC;yBACD,cAAc,CAAC,aAAa,KAAK,QAAQ,CAAC,CAAC;gBAChD,SAAS,EAAE,IAAI;aAClB,CAAC,CAAA;SACL;IACL,CAAC;CACJ","sourcesContent":["import Client from '#structures/Client.js'\nimport Command from '#structures/Command.js'\nimport { ApplicationCommandOptionType, ChatInputCommandInteraction, EmbedBuilder } from 'discord.js'\n\nexport default class Eval extends Command {\n    constructor () {\n        super({\n            name: 'eval',\n            description: 'Evaluate code',\n            permissions: {\n                dev: true,\n            },\n            options: [\n                {\n                    type: ApplicationCommandOptionType.String,\n                    name: 'code',\n                    description: 'The code to evaluate',\n                    required: true,\n                },\n            ],\n        })\n    }\n\n    override async run (interaction: ChatInputCommandInteraction) {\n        const client = interaction.client as Client\n        if (!client.devs.includes(interaction.user.id)) return await interaction.reply('Sorry, you are not a developer.')\n        const code = interaction.options.getString('code', true)\n        try {\n            // eslint-disable-next-line no-eval\n            const evaled = await eval(code)\n            return await interaction.reply({\n                embeds: [\n                    new EmbedBuilder()\n                        .setTitle('Eval')\n                        .setFields({\n                            name: 'Input',\n                            value: `\\`\\`\\`js\\n${code}\\`\\`\\``,\n                        })\n                        .setDescription(`\\`\\`\\`js\\n${evaled}\\`\\`\\``),\n                ],\n                ephemeral: true,\n            })\n        } catch (error) {\n            return await interaction.reply({\n                embeds: [new EmbedBuilder()\n                    .setTitle('Eval')\n                    .setFields({\n                        name: 'Input',\n                        value: `\\`\\`\\`js\\n${code}\\`\\`\\``,\n                    })\n                    .setDescription(`\\`\\`\\`js\\n${error}\\`\\`\\``)],\n                ephemeral: true,\n            })\n        }\n    }\n}\n"]}