{"version":3,"file":"ban.js","sourceRoot":"","sources":["../../../../src/slash/commands/Moderacion/ban.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,4BAA4B,EAA+B,MAAM,YAAY,CAAA;AACtF,OAAO,OAAO,MAAM,wBAAwB,CAAA;AAC5C,OAAO,UAAU,EAAE,EAAE,IAAI,EAAE,MAAM,sBAAsB,CAAA;AAEvD,MAAM,CAAC,OAAO,OAAO,GAAI,SAAQ,OAAO;IACpC;QACI,KAAK,CAAC;YACF,IAAI,EAAE,KAAK;YACX,WAAW,EAAE,4BAA4B;YACzC,aAAa,EAAE,KAAK;YACpB,OAAO,EAAE,KAAK;YACd,OAAO,EAAE;gBACL;oBACI,IAAI,EAAE,4BAA4B,CAAC,IAAI;oBACvC,IAAI,EAAE,MAAM;oBACZ,WAAW,EAAE,aAAa;oBAC1B,QAAQ,EAAE,IAAI;iBACjB;gBACD;oBACI,IAAI,EAAE,4BAA4B,CAAC,MAAM;oBACzC,IAAI,EAAE,QAAQ;oBACd,WAAW,EAAE,oBAAoB;oBACjC,QAAQ,EAAE,KAAK;iBAClB;gBACD;oBACI,IAAI,EAAE,4BAA4B,CAAC,OAAO;oBAC1C,IAAI,EAAE,MAAM;oBACZ,WAAW,EAAE,uCAAuC;oBACpD,QAAQ,EAAE,KAAK;iBAClB;aACJ;SACJ,CAAC,CAAA;IACN,CAAC;IAEQ,KAAK,CAAC,GAAG,CAAE,WAAkD;QAClE,MAAM,SAAS,GAAG,UAAU,CAAC,WAAW,CAAC,CAAA;QACzC,MAAM,MAAM,GAAG,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;QACpD,IAAI,CAAC,MAAM,EAAE;YACT,OAAO,MAAM,WAAW,CAAC,KAAK,CAAC;gBAC3B,OAAO,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC;gBACtC,SAAS,EAAE,IAAI;aAClB,CAAC,CAAA;SACL;QACD,MAAM,MAAM,GAAG,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,oBAAoB,CAAA;QAC9E,MAAM,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;QACxD,IAAI,MAAM,CAAC,EAAE,KAAK,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE;YACnC,OAAO,MAAM,WAAW,CAAC,KAAK,CAAC;gBAC3B,OAAO,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjC,SAAS,EAAE,IAAI;aAClB,CAAC,CAAA;SACL;QACD,IAAI,MAAM,CAAC,EAAE,KAAK,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE;YACzC,OAAO,MAAM,WAAW,CAAC,KAAK,CAAC;gBAC3B,OAAO,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;gBAClC,SAAS,EAAE,IAAI;aAClB,CAAC,CAAA;SACL;QACD,IAAI,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,IAAI,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE;YAC5E,OAAO,MAAM,WAAW,CAAC,KAAK,CAAC;gBAC3B,OAAO,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;gBACnC,SAAS,EAAE,IAAI;aAClB,CAAC,CAAA;SACL;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YAClB,OAAO,MAAM,WAAW,CAAC,KAAK,CAAC;gBAC3B,OAAO,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC;gBACvC,SAAS,EAAE,IAAI;aAClB,CAAC,CAAA;SACL;QACD,OAAO,MAAM,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,oBAAoB,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAA;IAC3E,CAAC;CACJ","sourcesContent":["import { ApplicationCommandOptionType, ChatInputCommandInteraction } from 'discord.js'\nimport Command from '#structures/Command.js'\nimport Translator, { keys } from '#utils/Translator.js'\n\nexport default class Ban extends Command {\n    constructor () {\n        super({\n            name: 'ban',\n            description: 'Ban a user from the server',\n            dm_permission: false,\n            only_dm: false,\n            options: [\n                {\n                    type: ApplicationCommandOptionType.User,\n                    name: 'user',\n                    description: 'User to ban',\n                    required: true,\n                },\n                {\n                    type: ApplicationCommandOptionType.String,\n                    name: 'reason',\n                    description: 'Reason for the ban',\n                    required: false,\n                },\n                {\n                    type: ApplicationCommandOptionType.Integer,\n                    name: 'days',\n                    description: 'Days to delete messages from the user',\n                    required: false,\n                },\n            ],\n        })\n    }\n\n    override async run (interaction: ChatInputCommandInteraction<'cached'>) {\n        const translate = Translator(interaction)\n        const member = interaction.options.getMember('user')\n        if (!member) {\n            return await interaction.reply({\n                content: translate(keys.ban.not_found),\n                ephemeral: true,\n            })\n        }\n        const reason = interaction.options.getString('reason') ?? 'No reason provided'\n        const days = interaction.options.getInteger('days') ?? 0\n        if (member.id === interaction.user.id) {\n            return await interaction.reply({\n                content: translate(keys.ban.self),\n                ephemeral: true,\n            })\n        }\n        if (member.id === interaction.guild.ownerId) {\n            return await interaction.reply({\n                content: translate(keys.ban.owner),\n                ephemeral: true,\n            })\n        }\n        if (member.roles.highest.position >= interaction.member.roles.highest.position) {\n            return await interaction.reply({\n                content: translate(keys.ban.higher),\n                ephemeral: true,\n            })\n        }\n        if (!member.bannable) {\n            return await interaction.reply({\n                content: translate(keys.ban.unbannable),\n                ephemeral: true,\n            })\n        }\n        return await member.ban({ reason, deleteMessageSeconds: days * 86400 })\n    }\n}\n"]}