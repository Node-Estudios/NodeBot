{"version":3,"file":"play.js","sourceRoot":"","sources":["../../../../src/slash/commands/MÃºsica/play.ts"],"names":[],"mappings":"AAAA,OAAO,EACH,4BAA4B,EAE5B,YAAY,EAEZ,MAAM,GAET,MAAM,YAAY,CAAA;AAEnB,OAAO,iBAAiB,MAAM,6BAA6B,CAAA;AAC3D,OAAO,UAAU,EAAE,EAAE,IAAI,EAAE,MAAM,sBAAsB,CAAA;AACvD,OAAO,UAAU,MAAM,sBAAsB,CAAA;AAC7C,OAAO,OAAO,MAAM,wBAAwB,CAAA;AAG5C,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAA;AACvC,OAAO,MAAM,MAAM,kBAAkB,CAAA;AAErC,MAAM,CAAC,OAAO,OAAO,IAAK,SAAQ,OAAO;IACrC;QACI,KAAK,CAAC;YACF,IAAI,EAAE,MAAM;YACZ,WAAW,EAAE,qEAAqE;YAClF,aAAa,EAAE,KAAK;YACpB,QAAQ,EAAE,CAAC;YACX,OAAO,EAAE;gBACL;oBACI,IAAI,EAAE,4BAA4B,CAAC,MAAM;oBACzC,IAAI,EAAE,MAAM;oBACZ,WAAW,EAAE,yCAAyC;oBACtD,YAAY,EAAE,IAAI;oBAClB,QAAQ,EAAE,KAAK;iBAClB;aACJ;SACJ,CAAC,CAAA;IACN,CAAC;IAEQ,KAAK,CAAC,GAAG,CAAE,WAAwC;QACxD,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;YAAE,OAAM;QACxC,MAAM,MAAM,GAAG,WAAW,CAAC,MAAgB,CAAA;QAC3C,IAAI;YACA,MAAM,WAAW,CAAC,UAAU,EAAE,CAAA;SACjC;QAAC,OAAO,KAAK,EAAE;YACZ,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;YACnB,OAAO,MAAM,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAc,CAAC,CAAA;SAC9D;QACD,MAAM,SAAS,GAAG,UAAU,CAAC,WAAW,CAAC,CAAA;QACzC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS;YACnC,OAAO,MAAM,WAAW,CAAC,SAAS,CAAC;gBAC/B,MAAM,EAAE;oBACJ,IAAI,YAAY,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC;wBAC9C,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;wBACpC,OAAO,EAAE,MAAM,CAAC,IAAI,EAAE,gBAAgB,EAAE;qBAC3C,CAAC;iBACL;aACJ,CAAC,CAAA;QACN,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAA;QAC1D,IAAI,CAAC,MAAM,EAAE;YACT,MAAM,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,eAAe,CACvC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAuB,EAChD,WAAW,CAAC,SAAS,CACxB,CAAA;YACD,IAAI;gBACA,MAAM,MAAM,CAAC,OAAO,EAAE,CAAA;aACzB;YAAC,OAAO,KAAK,EAAE;gBACZ,OAAO,MAAM,WAAW,CAAC,SAAS,CAAC;oBAC/B,MAAM,EAAE;wBACJ,IAAI,YAAY,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC;4BAC9C,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;4BACpC,OAAO,EAAE,MAAM,CAAC,IAAI,EAAE,gBAAgB,EAAE;yBAC3C,CAAC;qBACL;iBACJ,CAAC,CAAA;aACL;SACJ;QACD,IAAI,MAAM,CAAC,YAAY,CAAC,EAAE,KAAK,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS;YAC7D,OAAO,MAAM,WAAW,CAAC,SAAS,CAAC;gBAC/B,MAAM,EAAE;oBACJ,IAAI,YAAY,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC;wBAC9C,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;wBAC/B,OAAO,EAAE,MAAM,CAAC,IAAI,EAAE,gBAAgB,EAAE;qBAC3C,CAAC;iBACL;aACJ,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;QAE1B,MAAM,CAAC,aAAa,GAAG,WAAW,CAAC,SAAS,CAAA;QAG5C,IAAI;YACA,MAAM,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;YACzD,MAAM,MAAM,GAAG,CAAC,IAAI;gBAChB,CAAC,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,WAAW,CAAC,IAAI,CAAC;qBAC/C,IAAI,CAAC,CAAC,CAAC,EAAE;oBACN,IAAI,CAAC,CAAC,EAAE;wBACJ,WAAW,CAAC,SAAS,CAAC;4BAClB,MAAM,EAAE;gCACJ,IAAI,YAAY,EAAE;qCACb,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;qCACpB,SAAS,CAAC;oCACP,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC;oCAC3C,OAAO,EAAE,MAAM,CAAC,IAAI,EAAE,gBAAgB,EAAE;iCAC3C,CAAC;6BACT;yBACJ,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;wBACtB,OAAO,SAAS,CAAA;qBACnB;oBACD,OAAO,CAAC,CAAA;gBACZ,CAAC,CAAC;qBACD,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;gBACxB,CAAC,CAAC,MAAM,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,WAAW,CAAC,IAAI,EAAE,SAAS,CAAC;qBACzD,IAAI,CAAC,CAAC,CAAC,EAAE;oBACN,IAAI,CAAC,CAAC,EAAE;wBACJ,WAAW,CAAC,SAAS,CAAC;4BAClB,MAAM,EAAE;gCACJ,IAAI,YAAY,EAAE;qCACb,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;qCACpB,SAAS,CAAC;oCACP,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC;oCAC3C,OAAO,EAAE,MAAM,CAAC,IAAI,EAAE,gBAAgB,EAAE;iCAC3C,CAAC;6BACT;yBACJ,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;wBACtB,OAAO,SAAS,CAAA;qBACnB;oBACD,OAAO,CAAC,CAAA;gBACZ,CAAC,CAAC;qBACD,KAAK,CAAC,KAAK,EAAC,CAAC,EAAC,EAAE;oBACb,IAAK,CAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,yBAAyB,CAAC,EAAE;wBAC1D,WAAW,CAAC,SAAS,CAAC;4BAClB,OAAO,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC;yBAC/C,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;wBACtB,OAAO,SAAS,CAAA;qBACnB;oBACD,IAAK,CAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,oBAAoB,CAAC,EAAE;wBACrD,WAAW,CAAC,SAAS,CAAC;4BAClB,OAAO,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC;yBACnD,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;wBACtB,OAAO,SAAS,CAAA;qBACnB;oBACD,IAAK,CAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,6BAA6B,CAAC,EAAE;wBAC9D,WAAW,CAAC,SAAS,CAAC;4BAClB,OAAO,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;yBAC9C,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;wBACtB,OAAO,SAAS,CAAA;qBACnB;oBACD,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;oBACf,WAAW,CAAC,SAAS,CAAC;wBAClB,MAAM,EAAE;4BACJ,IAAI,YAAY,EAAE;iCACb,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;iCACpB,SAAS,CAAC;gCACP,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC;gCAC3C,OAAO,EAAE,MAAM,CAAC,IAAI,EAAE,gBAAgB,EAAE;6BAC3C,CAAC;yBACT;qBACJ,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;oBACtB,OAAO,SAAS,CAAA;gBACpB,CAAC,CAAC,CAAA;YACV,IAAI,CAAC,MAAM;gBAAE,OAAM;YAEnB,IAAI,MAAM,CAAC,OAAO,EAAE,IAAI;gBACpB,OAAO,MAAM,WAAW,CAAC,SAAS,CAAC;oBAC/B,OAAO,EAAE,kEAAkE;iBAC9E,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;YAE1B,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;YACxB,IAAI;gBACA,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM;oBAAE,MAAM,MAAM,CAAC,IAAI,EAAE,CAAA;aAC5D;YAAC,OAAO,KAAK,EAAE;gBACZ,IAAK,KAAe,CAAC,OAAO,CAAC,QAAQ,CAAC,yBAAyB,CAAC,EAAE;oBAC9D,WAAW,CAAC,SAAS,CAAC;wBAClB,OAAO,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC;qBAC/C,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;oBACtB,OAAM;iBACT;gBACD,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;aACtB;YACD,MAAM,KAAK,GAAG,IAAI,YAAY,EAAE;iBAC3B,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;iBAC/B,SAAS,CACN;gBACI,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;gBAC5B,KAAK,EAAE,MAAM,CAAC,MAAM,IAAI,SAAS;gBACjC,MAAM,EAAE,IAAI;aACf,CACJ;iBACA,SAAS,CAAC;gBACP,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC;gBAC/B,KAAK,EAAE,GAAG,WAAW,CAAC,IAAI,EAAE;gBAC5B,MAAM,EAAE,IAAI;aACf,CAAC,CAAA;YACN,MAAM,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAA;YACpE,IAAI,QAAQ;gBACR,KAAK,CAAC,SAAS,CACX;oBACI,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;oBAC9B,KAAK,EAAE,QAAQ;oBACf,MAAM,EAAE,IAAI;iBACf,CACJ,CAAA;YACL,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,KAAK,aAAa,EAAE;gBACxC,MAAM,SAAS,GAAG,iBAAiB,CAAC,GAAG,CAAC,cAAc,GAAG,WAAW,CAAC,EAAE,CAAC,CAAA;gBACxE,MAAM,aAAa,GAAG,SAAS,EAAE,IAAI,EAAE,CAAA;gBACvC,MAAM,SAAS,GAAG,2BAA2B,GAAG,aAAa,GAAG,IAAI,CAAA;gBACpE,KAAK,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAA;aACvC;YAED,KAAK,CAAC,YAAY,CAAC,8BAA8B,MAAM,CAAC,EAAE,oBAAoB,CAAC,CAAA;YAC/E,KAAK,CAAC,cAAc,CAChB,KAAK,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;gBAC5B,IAAI,EAAE,IAAI,MAAM,CAAC,KAAK,qCAAqC,MAAM,CAAC,EAAE,GAAG;aAC1E,CAAC,oCAAoC,CACzC,CAAA;YAYD,MAAM,WAAW,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;SACvE;QAAC,OAAO,CAAC,EAAE;YACR,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;YAEf,IAAI,CAAC,CAAC,MAAM;gBAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAA;YACpC,WAAW,CAAC,SAAS,CAAC;gBAClB,OAAO,EAAE,SAAS,CAAC,IAAI,CAAC,YAAY,EAAE;oBAClC,SAAS,EAAE,MAAM,CAAC,iBAAiB;iBACtC,CAAC;aACL,CAAC,CAAA;SACL;QACD,OAAO,IAAI,CAAA;IACf,CAAC;IAED,KAAK,CAAC,aAAa,CAAE,MAAc,EAAE,IAAU;QAC3C,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAgB,CAAA;QAC5C,IAAI;YACA,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAA;YACtD,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAuB,CAAA;YACtD,MAAM,IAAI,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAA4B,CAAA;YAC1F,OAAO,MAAM,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,OAAO,EAAE,IAAI,EAAE,SAAS,CAAC,CAAA;SAC1E;QAAC,OAAO,KAAK,EAAE;YACZ,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;YACnB,MAAM,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAc,CAAC,CAAA;YACpD,OAAO,SAAS,CAAA;SACnB;IACL,CAAC;CACJ","sourcesContent":["import {\n    ApplicationCommandOptionType,\n    ChatInputCommandInteraction,\n    EmbedBuilder,\n    VoiceChannel,\n    Colors,\n    User,\n} from 'discord.js'\nimport { MusicCarouselShelf, MusicResponsiveListItem } from 'youtubei.js/dist/src/parser/nodes.js'\nimport performanceMeters from '#cache/performanceMeters.js'\nimport Translator, { keys } from '#utils/Translator.js'\nimport formatTime from '#utils/formatTime.js'\nimport Command from '#structures/Command.js'\nimport Client from '#structures/Client.js'\nimport Player from '#structures/Player.js'\nimport { randomInt } from 'node:crypto'\nimport logger from '#utils/logger.js'\n\nexport default class play extends Command {\n    constructor () {\n        super({\n            name: 'play',\n            description: 'Play the song that you want with the name or a youtube/spotify link',\n            dm_permission: false,\n            cooldown: 5,\n            options: [\n                {\n                    type: ApplicationCommandOptionType.String,\n                    name: 'song',\n                    description: 'Name of the song that u want to listen.',\n                    autocomplete: true,\n                    required: false,\n                },\n            ],\n        })\n    }\n\n    override async run (interaction: ChatInputCommandInteraction) {\n        if (!interaction.inCachedGuild()) return\n        const client = interaction.client as Client\n        try {\n            await interaction.deferReply()\n        } catch (error) {\n            logger.error(error)\n            return client.errorHandler.captureException(error as Error)\n        }\n        const translate = Translator(interaction)\n        if (!interaction.member.voice.channelId)\n            return await interaction.editReply({\n                embeds: [\n                    new EmbedBuilder().setColor(Colors.Red).setFooter({\n                        text: translate(keys.play.not_voice),\n                        iconURL: client.user?.displayAvatarURL(),\n                    }),\n                ],\n            })\n        let player = client.music.players.get(interaction.guildId)\n        if (!player) {\n            player = await client.music.createNewPlayer(\n                interaction.member.voice.channel as VoiceChannel,\n                interaction.channelId,\n            )\n            try {\n                await player.connect()\n            } catch (error) {\n                return await interaction.editReply({\n                    embeds: [\n                        new EmbedBuilder().setColor(Colors.Red).setFooter({\n                            text: translate(keys.play.cant_join),\n                            iconURL: client.user?.displayAvatarURL(),\n                        }),\n                    ],\n                })\n            }\n        }\n        if (player.voiceChannel.id !== interaction.member.voice.channelId)\n            return await interaction.editReply({\n                embeds: [\n                    new EmbedBuilder().setColor(Colors.Red).setFooter({\n                        text: translate(keys.play.same),\n                        iconURL: client.user?.displayAvatarURL(),\n                    }),\n                ],\n            }).catch(logger.error)\n\n        player.textChannelId = interaction.channelId\n\n        // Si el usuario estÃ¡ en el mismo canal de voz que el bot\n        try {\n            const song = interaction.options.getString('song', false)\n            const search = !song\n                ? await this.getRecomended(player, interaction.user)\n                    .then(t => {\n                        if (!t) {\n                            interaction.editReply({\n                                embeds: [\n                                    new EmbedBuilder()\n                                        .setColor(Colors.Red)\n                                        .setFooter({\n                                            text: translate(keys.play.not_reproducible),\n                                            iconURL: client.user?.displayAvatarURL(),\n                                        }),\n                                ],\n                            }).catch(logger.error)\n                            return undefined\n                        }\n                        return t\n                    })\n                    .catch(logger.error)\n                : await client.music.search(song, interaction.user, 'Youtube')\n                    .then(t => {\n                        if (!t) {\n                            interaction.editReply({\n                                embeds: [\n                                    new EmbedBuilder()\n                                        .setColor(Colors.Red)\n                                        .setFooter({\n                                            text: translate(keys.play.not_reproducible),\n                                            iconURL: client.user?.displayAvatarURL(),\n                                        }),\n                                ],\n                            }).catch(logger.error)\n                            return undefined\n                        }\n                        return t\n                    })\n                    .catch(async e => {\n                        if ((e as Error).message.includes('Video is age restricted')) {\n                            interaction.editReply({\n                                content: translate(keys.play.age_restricted),\n                            }).catch(logger.error)\n                            return undefined\n                        }\n                        if ((e as Error).message.includes('Playlist not found')) {\n                            interaction.editReply({\n                                content: translate(keys.play.playlist_not_found),\n                            }).catch(logger.error)\n                            return undefined\n                        }\n                        if ((e as Error).message.includes('This video is not available')) {\n                            interaction.editReply({\n                                content: translate(keys.play.not_available),\n                            }).catch(logger.error)\n                            return undefined\n                        }\n                        logger.error(e)\n                        interaction.editReply({\n                            embeds: [\n                                new EmbedBuilder()\n                                    .setColor(Colors.Red)\n                                    .setFooter({\n                                        text: translate(keys.play.not_reproducible),\n                                        iconURL: client.user?.displayAvatarURL(),\n                                    }),\n                            ],\n                        }).catch(logger.error)\n                        return undefined\n                    })\n            if (!search) return\n            // TODO: Add streaming support\n            if (search.streams?.live)\n                return await interaction.editReply({\n                    content: 'We are currently working on supporting Live Streaming videos. :D',\n                }).catch(logger.error)\n\n            player.queue.add(search)\n            try {\n                if (!player.playing || player.paused) await player.play()\n            } catch (error) {\n                if ((error as Error).message.includes('Video is age restricted')) {\n                    interaction.editReply({\n                        content: translate(keys.play.age_restricted),\n                    }).catch(logger.error)\n                    return\n                }\n                logger.error(error)\n            }\n            const embed = new EmbedBuilder()\n                .setColor(client.settings.color)\n                .addFields(\n                    {\n                        name: translate(keys.AUTHOR),\n                        value: search.author ?? 'unknown',\n                        inline: true,\n                    },\n                )\n                .addFields({\n                    name: translate(keys.REQUESTER),\n                    value: `${interaction.user}`,\n                    inline: true,\n                })\n            const duration = formatTime(Math.trunc(search.duration ?? 0), false)\n            if (duration)\n                embed.addFields(\n                    {\n                        name: translate(keys.DURATION),\n                        value: duration,\n                        inline: true,\n                    },\n                )\n            if (client.settings.mode === 'development') {\n                const execution = performanceMeters.get('interaction_' + interaction.id)\n                const executionTime = execution?.stop()\n                const finaltext = 'Internal execution time: ' + executionTime + 'ms'\n                embed.setFooter({ text: finaltext })\n            }\n            // if (source === 'Youtube') {\n            embed.setThumbnail(`https://img.youtube.com/vi/${search.id}/maxresdefault.jpg`)\n            embed.setDescription(\n                `**${translate(keys.play.added, {\n                    song: `[${search.title}](https://www.youtube.com/watch?v=${search.id})`,\n                })}** <:pepeblink:967941236029788160>`,\n            )\n            // }\n            // else if (source === 'Spotify') {\n            //     if (search.thumbnails?.[0])\n            //         embed.setDescription(\n            //             `**${translate(keys.play.added, {\n            //                 song: `[${search.title}](https://open.spotify.com/track/${search.id})`,\n            //             })}** <:pepeblink:967941236029788160>`,\n            //         )\n\n            //     embed.setThumbnail(search.thumbnails?.[0].url ?? null)\n            // }\n            await interaction.editReply({ embeds: [embed] }).catch(logger.error)\n        } catch (e) {\n            logger.error(e)\n            // @ts-expect-error\n            if (e.errors) logger.error(e.errors)\n            interaction.editReply({\n                content: translate(keys.GENERICERROR, {\n                    inviteURL: client.officialServerURL,\n                }),\n            })\n        }\n        return true\n    }\n\n    async getRecomended (player: Player, user: User) {\n        const client = player.guild.client as Client\n        try {\n            const home = await player.youtubei.music.getHomeFeed()\n            const songs = home.sections?.[0] as MusicCarouselShelf\n            const song = songs.contents?.[randomInt(songs.contents.length)] as MusicResponsiveListItem\n            return await client.music.search(song.name ?? 'music', user, 'Youtube')\n        } catch (error) {\n            logger.error(error)\n            client.errorHandler.captureException(error as Error)\n            return undefined\n        }\n    }\n}\n"]}