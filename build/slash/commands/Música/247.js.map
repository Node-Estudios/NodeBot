{"version":3,"file":"247.js","sourceRoot":"","sources":["../../../../src/slash/commands/MÃºsica/247.ts"],"names":[],"mappings":"AAAA,OAAO,UAAU,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,MAAM,sBAAsB,CAAA;AAEtE,OAAO,YAAY,MAAM,6BAA6B,CAAA;AACtD,OAAO,OAAO,MAAM,wBAAwB,CAAA;AAE5C,OAAO,MAAM,MAAM,kBAAkB,CAAA;AAErC,MAAM,CAAC,OAAO,OAAO,WAAY,SAAQ,OAAO;IAC5C;QACI,KAAK,CAAC;YACF,IAAI,EAAE,KAAK;YACX,WAAW,EAAE,8BAA8B;YAC3C,QAAQ,EAAE,CAAC;YACX,aAAa,EAAE,KAAK;SACvB,CAAC,CAAA;IACN,CAAC;IAEQ,KAAK,CAAC,GAAG,CAAE,WAAwC;QACxD,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;YAAE,OAAM;QACxC,MAAM,MAAM,GAAG,WAAW,CAAC,MAAgB,CAAA;QAC3C,MAAM,SAAS,GAAG,UAAU,CAAC,WAAW,CAAC,CAAA;QACzC,MAAM,IAAI,GAAG,aAAa,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QACzD,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;QAC7D,IAAI,CAAC,MAAM;YACP,OAAO,MAAM,WAAW,CAAC,KAAK,CAC1B;gBACI,MAAM,EAAE;oBACJ,IAAI,YAAY,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;wBACzD,IAAI,EAAE,IAAI;wBACV,OAAO,EAAE,WAAW,CAAC,IAAI,CAAC,gBAAgB,EAAE;qBAC/C,CAAC;iBACL;gBACD,SAAS,EAAE,IAAI;aAClB,CACJ;iBACI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;QAE5B,IAAI,MAAM,CAAC,QAAQ,EAAE;YACjB,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAA;YACvB,OAAO,MAAM,WAAW,CAAC,KAAK,CAAC;gBAC3B,MAAM,EAAE;oBACJ,IAAI,YAAY,EAAE;yBACb,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;yBAC/B,SAAS,CAAC,EAAE,OAAO,EAAE,WAAW,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;yBAC/F,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;iBAC/C;aACJ,CAAC;iBACG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;SAC3B;aAAM;YACH,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAA;YACtB,OAAO,MAAM,WAAW,CAAC,KAAK,CAAC;gBAC3B,MAAM,EAAE;oBACJ,IAAI,YAAY,EAAE;yBACb,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;yBAC/B,SAAS,CAAC,EAAE,OAAO,EAAE,WAAW,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;yBAC/F,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;iBAC9C;aACJ,CAAC;iBACG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;SAC3B;IACL,CAAC;CACJ","sourcesContent":["import Translator, { keys, randomMessage } from '#utils/Translator.js'\nimport { ChatInputCommandInteraction } from 'discord.js'\nimport EmbedBuilder from '#structures/EmbedBuilder.js'\nimport Command from '#structures/Command.js'\nimport Client from '#structures/Client.js'\nimport logger from '#utils/logger.js'\n\nexport default class stayinvoice extends Command {\n    constructor () {\n        super({\n            name: '247',\n            description: 'Stay 24/7 in a voice channel',\n            cooldown: 5,\n            dm_permission: false,\n        })\n    }\n\n    override async run (interaction: ChatInputCommandInteraction) {\n        if (!interaction.inCachedGuild()) return\n        const client = interaction.client as Client\n        const translate = Translator(interaction)\n        const msgr = randomMessage(translate, keys.skip.messages)\n        const player = client.music.players.get(interaction.guild.id)\n        if (!player)\n            return await interaction.reply(\n                {\n                    embeds: [\n                        new EmbedBuilder().setColor(client.settings.color).setFooter({\n                            text: msgr,\n                            iconURL: interaction.user.displayAvatarURL(),\n                        }),\n                    ],\n                    ephemeral: true,\n                },\n            )\n                .catch(logger.error)\n\n        if (player.stayInVc) {\n            player.stayInVc = false\n            return await interaction.reply({\n                embeds: [\n                    new EmbedBuilder()\n                        .setColor(client.settings.color)\n                        .setAuthor({ iconURL: interaction.user.displayAvatarURL(), name: interaction.user.displayName })\n                        .setTitle(translate(keys[247].disabled)),\n                ],\n            })\n                .catch(logger.error)\n        } else {\n            player.stayInVc = true\n            return await interaction.reply({\n                embeds: [\n                    new EmbedBuilder()\n                        .setColor(client.settings.color)\n                        .setAuthor({ iconURL: interaction.user.displayAvatarURL(), name: interaction.user.displayName })\n                        .setTitle(translate(keys[247].enabled)),\n                ],\n            })\n                .catch(logger.error)\n        }\n    }\n}\n"]}