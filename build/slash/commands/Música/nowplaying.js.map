{"version":3,"file":"nowplaying.js","sourceRoot":"","sources":["../../../../src/slash/commands/Música/nowplaying.ts"],"names":[],"mappings":"AACA,OAAO,OAAO,MAAM,wBAAwB,CAAA;AAC5C,OAAO,MAAM,MAAM,kBAAkB,CAAA;AAMrC,MAAM,CAAC,OAAO,OAAO,UAAW,SAAQ,OAAO;IAC3C;QACI,KAAK,CAAC;YACF,IAAI,EAAE,YAAY;YAClB,WAAW,EAAE,+BAA+B;YAC5C,QAAQ,EAAE,CAAC;SACd,CAAC,CAAA;IACN,CAAC;IAEQ,KAAK,CAAC,GAAG,CAAE,WAAkD;QAgBlE,OAAO,MAAM,WAAW,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,sCAAsC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;IAgB3G,CAAC;CACJ","sourcesContent":["import { ChatInputCommandInteraction } from 'discord.js'\nimport Command from '#structures/Command.js'\nimport logger from '#utils/logger.js'\n// import Client from '#structures/Client.js'\n// import Translator, { keys } from '#utils/Translator.js'\n// import { MessageHelper } from '../../../handlers/messageHandler.js'\n// import Player from '#structures/Player.js'\n\nexport default class NowPlaying extends Command {\n    constructor () {\n        super({\n            name: 'nowplaying',\n            description: 'See the current song playing.',\n            cooldown: 5,\n        })\n    }\n\n    override async run (interaction: ChatInputCommandInteraction<'cached'>) {\n        /*         const client = interaction.client as Client\n        const translate = Translator(interaction)\n        const message = new MessageHelper(interaction)\n        const player = await Player.tryGetPlayer(interaction, false)\n\n        // if (!player?.queue.current) {\n        //      return await message.sendEphemeralMessage({\n        //  embeds: [\n        //       new EmbedBuilder().setColor(client.settings.color).setFooter({\n        //            text: translate(keys.skip.messages[1]), // me gusta\n\n                    }),\n                ],\n            }, true)\n        } */\n        return await interaction.reply({ content: 'En desarrollo, comando no disponible' }).catch(logger.error)\n        // const song = player.queue.current\n        // const parsedCurrentDuration = moment\n        //   .duration(player.position, 'milliseconds')\n        //   .format('mm:ss', {\n        //        trim: false,\n        //   })\n        // const parsedDuration = moment\n        //   .duration(duration, 'milliseconds')\n        //   .format('mm:ss', {\n        //       trim: false,\n        //  })\n        // const part = Math.floor((player.position / duration) * 30)\n        // const uni = player.playing ? '▶' : '⏸️'\n        // const thumbnail = `https://img.youtube.com/vi/${identifier}/maxresdefault.jpg`\n        // const user = `<@${requester.userId}>`\n    }\n}\n"]}