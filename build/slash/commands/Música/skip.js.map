{"version":3,"file":"skip.js","sourceRoot":"","sources":["../../../../src/slash/commands/MÃºsica/skip.ts"],"names":[],"mappings":"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","sourcesContent":["import { ChatInputCommandInteraction, Colors } from 'discord.js'\nimport EmbedBuilder from '#structures/EmbedBuilder.js'\nimport Client from '#structures/Client.js'\nimport Command from '#structures/Command.js'\nimport Translator, { keys } from '#utils/Translator.js'\n\nimport logger from '#utils/logger.js'\n\nexport default class skip extends Command {\n    constructor () {\n        super({\n            name: 'skip',\n            description: 'Skips the current song!',\n            cooldown: 5,\n            dm_permission: false,\n        })\n    }\n\n    override async run (interaction: ChatInputCommandInteraction<'cached'>) {\n        const client = interaction.client as Client\n        const translate = Translator(interaction)\n        const player = client.music.players.get(interaction.guild.id)\n        if (!player)\n            return await interaction.reply({\n                embeds: [\n                    new EmbedBuilder()\n                        .setColor(client.settings.color)\n                        .setFooter({\n                            text: translate(keys.queue.no_queue),\n                            iconURL: interaction.user.displayAvatarURL(),\n                        }),\n                ],\n                ephemeral: true,\n            })\n                .catch(logger.error)\n\n        if (!interaction.member.voice)\n            return await interaction.reply({\n                embeds: [\n                    new EmbedBuilder()\n                        .setColor(Colors.Red)\n                        .setFooter({\n                            text: translate(keys.skip.no_same),\n                            iconURL: interaction.user.displayAvatarURL(),\n                        }),\n                ],\n                ephemeral: true,\n            })\n                .catch(console.error)\n\n        const vc = player.voiceChannel\n        if (interaction.member.voice.channelId !== vc.id)\n            return await interaction.reply({\n                embeds: [\n                    new EmbedBuilder().setColor(Colors.Red).setFooter({\n                        text: translate(keys.skip.no_same),\n                        iconURL: interaction.user.displayAvatarURL(),\n                    }),\n                ],\n                ephemeral: true,\n            })\n                .catch(logger.error)\n\n        if (!player.queue.current) return\n        if (player.trackRepeat) player.setTrackRepeat(false)\n        if (player.queueRepeat) player.setQueueRepeat(false)\n        interaction.reply({\n            embeds: [\n                new EmbedBuilder()\n                    .setColor(client.settings.color)\n                    .setTitle(translate(keys.SUCCESSEMBED))\n                    .setDescription(\n                        translate(keys.skip.skiped, {\n                            song: player.queue.current.title,\n                        }),\n                    )\n                    .setFooter({ text: interaction.user.username, iconURL: interaction.user.displayAvatarURL() })],\n        }).catch(logger.error)\n        return player.skip()\n    }\n}\n"]}