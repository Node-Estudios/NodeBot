{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/restAPI/index.ts"],"names":[],"mappings":"AAAA,OAAO,IAAI,MAAM,MAAM,CAAA;AACvB,OAAO,OAAO,MAAM,SAAS,CAAA;AAE7B,OAAO,MAAM,MAAM,kBAAkB,CAAA;AACrC,OAAO,SAAS,MAAM,cAAc,CAAA;AAEpC,MAAM,CAAC,OAAO,OAAO,WAAW;IAC5B,OAAO,CAAa;IACpB,GAAG,GAAG,OAAO,EAAE,CAAA;IAEf,YAAa,OAAoB;QAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;IAC1B,CAAC;IAED,KAAK,CAAC,YAAY;QAEd,IAAI,CAAC,GAAG,CAAC,GAAG,CACR,IAAI,CAAC;YACD,MAAM,EAAE;gBACJ,uBAAuB;gBACvB,uBAAuB;gBACvB,2BAA2B;gBAC3B,4BAA4B;aAC/B;YACD,WAAW,EAAE,IAAI;SACpB,CAAC,CACL,CAAA;QACD,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAA;QAC5B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAA;QAErD,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAA;QACxD,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,GAAG,EAAE,GAAG;YACzC,GAAG,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAA;QAC5C,CAAC,CAAC,CAAA;IACN,CAAC;IAED,KAAK,CAAC,KAAK;QACP,MAAM,IAAI,CAAC,YAAY,EAAE,CAAA;QACzB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;YACvB,MAAM,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAA;QACnD,CAAC,CAAC,CAAA;QACF,OAAO,IAAI,CAAA;IACf,CAAC;CACJ","sourcesContent":["import cors from 'cors'\nimport express from 'express'\nimport NodeManager from '#structures/NodeManager.js'\nimport logger from '#utils/logger.js'\nimport ApiModule from './api/app.js'\n\nexport default class restApiBase {\n    manager: NodeManager\n    app = express()\n\n    constructor (manager: NodeManager) {\n        this.manager = manager\n    }\n\n    async #loadModules () {\n        // this.app.use(express.static(__dirname + \"/public\"));\n        this.app.use(\n            cors({\n                origin: [\n                    'http://localhost:3000',\n                    'http://localhost:5000',\n                    'http://176.9.111.217:3000',\n                    'https://176.9.111.217:3000',\n                ],\n                credentials: true,\n            }),\n        )\n        this.app.use(express.json())\n        this.app.use(express.urlencoded({ extended: false }))\n\n        this.app.use('/api', new ApiModule(this.manager).router)\n        this.app.get('/dashboard', function (req, res) {\n            res.redirect(`${process.env.URL}:3000/`)\n        })\n    }\n\n    async start () {\n        await this.#loadModules()\n        this.app.listen(3000, () => {\n            logger.startUp('Server listening on port 3000')\n        })\n        return true\n    }\n}\n"]}