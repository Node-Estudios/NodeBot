{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/restAPI/statistics/index.ts"],"names":[],"mappings":"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","sourcesContent":["import NodeManager from '#structures/NodeManager.js'\nimport logger from '#utils/logger.js'\n\nimport { Router as router } from 'express'\n// export default router\nexport default class Statistics {\n    manager: NodeManager\n    // app: Express.Application\n    result: any[] = []\n    #router = router()\n\n    constructor (manager: NodeManager) {\n        this.manager = manager\n        this.#load()\n    }\n\n    get router () {\n        return this.#router\n    }\n\n    async getData (manager: NodeManager, result: any[]): Promise<any[] | undefined> {\n        /*\n        & My function for get data from clusters, it only took me 4 hours ._.\n? Example output:\n[{\n    \"guilds\": 4916,\n    \"ping\": 124.4,\n    \"channels\": 123192,\n    \"members\": 326282,\n    \"memoryUsage\": \"266.41\",\n    \"players\": 0,\n    \"playingPlayers\": 0,\n    \"cluster\": 0,\n    \"shardList\": [\n        0,\n        1,\n        2,\n        3,\n        4\n    ]\n},\n{\n    \"guilds\": 4834,\n    \"ping\": 168.6,\n    \"channels\": 124016,\n    \"members\": 321190,\n    \"memoryUsage\": \"267.27\",\n    \"players\": 0,\n    \"playingPlayers\": 0,\n    \"cluster\": 2,\n    \"shardList\": [\n        10,\n        11,\n        12,\n        13,\n        14\n    ]\n},\n{\n    \"guilds\": 1936,\n    \"ping\": 128.5,\n    \"channels\": 50631,\n    \"members\": 113248,\n    \"memoryUsage\": \"128.79\",\n    \"players\": 0,\n    \"playingPlayers\": 0,\n    \"cluster\": 3,\n    \"shardList\": [\n        15,\n        16\n    ]\n},\n{\n    \"guilds\": 4867,\n    \"ping\": 126,\n    \"channels\": 123735,\n    \"members\": 358463,\n    \"memoryUsage\": \"265.79\",\n    \"players\": 0,\n    \"playingPlayers\": 0,\n    \"cluster\": 1,\n    \"shardList\": [\n        5,\n        6,\n        7,\n        8,\n        9\n    ]\n},\n{\n    \"guilds\": 16553,\n    \"players\": 0,\n    \"memoryUsage\": 926,\n    \"members\": 1119183,\n    \"channels\": 421574,\n    \"playingPlayers\": 0,\n    \"cluster\": -1,\n    \"dateNow\": 1671881448944,\n    \"dateHumanNow\": \"Saturday, 12/24/2022, 12:30:48\",\n    \"status\": {\n        \"error\": \"\",\n        \"status\": 200\n    }\n}\n]\n\n*/\n        /* Posible responses:\n                    ~ 503: Shards still spawning\n                    * 200: OK\n                    ! 500: Internal error (inside cluster event ready)\n                */\n        try {\n            if (manager.queue.queue.length !== 0) return\n            result = []\n            // Convertimos el objeto Map en un array y lo iteramos con map\n            // todo: remove any from here\n            const Promises = Array.from(manager.clusters).map(([key, cluster]: any) => {\n                return cluster.request({ content: 'statistics' }).then((data: any) => {\n                    Object.assign(data[0], { cluster: cluster.id, shardList: cluster.shardList })\n                    result.push(data[0])\n                    return data[0]\n                })\n            })\n            // Esperamos a que todas las promesas se completen\n            return await Promise.all(Promises).then(data => {\n                // console.log(result)\n                if (data.length === 0) return (result = [{ error: 'Shards still spawning', status: 503 }])\n                const sum = result.reduce(\n                    (\n                        acc: {\n                            guilds: any\n                            players: any\n                            memoryUsage: string\n                            members: any\n                            channels: any\n                            playingPlayers: any\n                        },\n                        element: {\n                            guilds: any\n                            players: any\n                            memoryUsage: string\n                            members: any\n                            channels: any\n                            playingPlayers: any\n                        },\n                    ) => {\n                        // Accedemos a las propiedades del elemento actual del array y las sumamos al acumulador\n                        return {\n                            guilds: acc.guilds + element.guilds,\n                            players: acc.players + element.players,\n                            memoryUsage: parseInt(acc.memoryUsage) + parseInt(element.memoryUsage),\n                            members: acc.members + element.members,\n                            channels: acc.channels + element.channels,\n                            playingPlayers: acc.playingPlayers + element.playingPlayers,\n                        }\n                    },\n                    { guilds: 0, playingPlayers: 0, players: 0, memoryUsage: 0, members: 0, channels: 0 },\n                )\n                Object.assign(sum, {\n                    cluster: -1,\n                    dateNow: Date.now(),\n                    dateHumanNow: new Date().toLocaleString(undefined, {\n                        year: 'numeric',\n                        month: '2-digit',\n                        day: '2-digit',\n                        weekday: 'long',\n                        hour: '2-digit',\n                        hour12: false,\n                        minute: '2-digit',\n                        second: '2-digit',\n                    }),\n                    status: { error: '', status: 200 },\n                })\n                // Agregamos la suma al final del array\n                result.push(sum)\n                return result\n                // this.manager.logger.log(`Guilds: ${sum.guilds} | Playing Players: ${sum.playingPlayers}`)\n            })\n        } catch (e: any) {\n            if (e) logger.error(new Error(e))\n            // * Status 500 is Internal Server Error\n            result.push({\n                error: 'Statistics internal error, call the developer with the next id',\n                status: 500,\n            })\n            return result\n        }\n    }\n\n    async #load () {\n        // ejecutar funcion de estadisticas\n        const getData = await this.getData(this.manager, this.result)\n        if (getData) this.result = getData\n        setInterval(async () => {\n            const getData = await this.getData(this.manager, this.result)\n            if (getData) this.result = getData\n        }, 6000)\n        this.router.get('/', (req: any, res: any) => {\n            res.json(this.result)\n        })\n        return this.router\n    }\n}\n"]}