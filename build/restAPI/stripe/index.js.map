{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/restAPI/stripe/index.ts"],"names":[],"mappings":"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","sourcesContent":["import express, { Router as router, Request } from 'express'\nimport NodeManager from '#structures/NodeManager.js'\n\nimport { Stripe } from 'stripe'\nimport logger from '#utils/logger.js'\n\nconst stripeAcces = new Stripe(process.env.STRIPE, { apiVersion: '2022-11-15', typescript: true })\nconst endpointSecret = ''\n// export default router\nexport default class StripeApi {\n    manager: NodeManager\n    router = router()\n    // app: Express.Application\n    constructor (manager: NodeManager) {\n        this.manager = manager\n        this.#load()\n    }\n\n    #load () {\n        this.router.use(express.json())\n        this.router.post('/pay', async (req: Request<{}, {}, payBody>, res) => {\n            const product = await stripeAcces.products.retrieve(req.body.product_id)\n            const price = await stripeAcces.prices.retrieve(product.default_price as string)\n            const session = await stripeAcces.checkout.sessions.create({\n                line_items: [\n                    {\n                        price: price.id,\n                        quantity: 1,\n                    },\n                ],\n                mode: price.type === 'recurring' ? 'subscription' : 'payment',\n                success_url: req.body.success_url,\n                cancel_url: req.body.cancel_url,\n                metadata: {\n                    user_id: req.body.user_id,\n                },\n            })\n\n            res.status(303).redirect(session.url ?? '')\n        })\n\n        this.router.post('/webhook', express.raw({ type: 'application/json' }), (request, response): any => {\n            let event: Stripe.Event\n            try {\n                event = stripeAcces.webhooks.constructEvent(\n                    request.body,\n                    request.headers['stripe-signature'] ?? '',\n                    endpointSecret,\n                )\n            } catch (err: any) {\n                logger.error('⚠️  Webhook signature verification failed.', err.message)\n                return response.sendStatus(400)\n            }\n\n            // Handle the event\n            switch (event.type) {\n                case 'payment_intent.succeeded':\n                    const paymentIntent = event.data.object as any\n                    logger.debug(`PaymentIntent for ${paymentIntent.amount} was successful!`)\n                    // Then define and call a method to handle the successful payment intent.\n                    // handlePaymentIntentSucceeded(paymentIntent);\n                    break\n                case 'payment_method.attached':\n                    const paymentMethod = event.data.object\n                    // Then define and call a method to handle the successful attachment of a PaymentMethod.\n                    // handlePaymentMethodAttached(paymentMethod);\n                    break\n                default:\n                    // Unexpected event type\n                    logger.debug(`Unhandled event type ${event.type}.`)\n            }\n\n            // Return a 200 response to acknowledge receipt of the event\n            response.send()\n        })\n        return this.router\n    }\n}\n\n// '/pay' body\ninterface payBody {\n    success_url: string // like a 'https://myweb.com/pay_sucess'\n    cancel_url?: string // like a 'https://myweb.com/cancel'\n    payment_method_types?: Stripe.Checkout.SessionCreateParams.PaymentMethodType[]\n    product_id: string\n    user_id: string\n}\n"]}